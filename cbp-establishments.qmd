# Establishments

```{r}
#| label: setup
#| include: false

source("./scripts/setup.R")

data_label_size <- 3.5 # for plots using labels as data points

# for helpful sub-setting
top_naics_cutoff <- 5
top_county_cutoff <- 10

```

```{r}
#| label: define-reference-data

# since no change in NC county FIPS codes over this time period, I can use the latest
# includes fipscty 999 "Statewide" that corresponds to employment not associated with a county
d_fips_county_ref <- read_csv("./data/ref/georef17.txt",
                      col_types = "ccc",
                      show_col_types = FALSE) |>
  rename(fipstate = st,
         fipscty = cty,
         county_name = ctyname) |>
  filter(fipstate == "37") |>
  mutate(county_name = str_remove(county_name, " County, North Carolina$"),
         county_name = if_else(county_name == "Statewide, North Carolina", "Statewide, NC", county_name))

d_fips_state_ref <- read_csv("./data/ref/georef17.txt",
                      col_types = "ccc",
                      show_col_types = FALSE) |>
  distinct(st, .keep_all = TRUE) |>
  mutate(state_name = str_extract(ctyname, "(?<=, ).*$")) |>
  select(fipstate = st,
         state_name)

# Since sector total codes and descriptions have not changed in this time period, I'll use the latest
# TODO: confirm this assumption!!
d_naics_ref_2021 <- read_csv("./data/ref/naics2017.txt",
                      col_types = "cc",
                      show_col_types = FALSE) |>
  clean_names()|>
  mutate_if(is.character, ~ purrr::map_chr(.x, iconv, "UTF-8", "UTF-8", sub='')) %>% # just in case
  rename(naics_descr = description) |>
  mutate(naics_descr = str_to_sentence(naics_descr),
         naics_descr = str_replace_all(naics_descr, "&", "and"))

d_naics_abbr_ref <- tribble(
  ~ naics_descr,                                                                 ~naics_abbr_num,  ~naics_abbr,
   "Agriculture, Forestry, Fishing and Hunting",                                  3,               "AgForFish",
   "Utilities",                                                                   17,              "Util",
   "Construction",                                                                5,               "Constr",
   "Manufacturing",                                                               10,              "Manuf",
   "Wholesale Trade",                                                             18,              "Whlsale",
   "Retail Trade",                                                                15,              "Retail",
   "Transportation and Warehousing",                                              16,              "Transpt",
   "Information",                                                                 9,               "Info",
   "Finance and Insurance",                                                       7,               "FinIns",
   "Real Estate and Rental and Leasing",                                          14,              "RealEst",
   "Professional, Scientific, and Technical Services",                            13,              "ProfSciTec",
   "Management of Companies and Enterprises",                                     12,              "Mgmt",
   "Administrative and Support and Waste Management and Remediation Services",    2,               "AdminWaste",
   "Educational Services",                                                        6,               "Educ",
   "Health Care and Social Assistance",                                           8,               "HealthSoc",
   "Arts, Entertainment, and Recreation",                                         4,               "ArtEntRec",
   "Accommodation and Food Services",                                             1,               "AccFood",
   "Other Services (except Public Administration)",                               19,              "OtherServ",
   "Industries not classified",                                                   20,              "OtherInd",
   "Mining, Quarrying, and Oil and Gas Extraction",                               11,              "MineOilGas",
   "Total for all sectors",                                                       0,               "TotalAllSec"
) |>
  mutate(naics_descr = str_to_sentence(naics_descr))

d_naics_ref_2021 <- read_csv("./data/ref/naics2017.txt",
                      col_types = "cc",
                      show_col_types = FALSE) |>
  clean_names()|>
  mutate_if(is.character, ~ purrr::map_chr(.x, iconv, "UTF-8", "UTF-8", sub='')) %>% # just in case
  rename(naics_descr = description) |>
  mutate(naics_descr = str_to_sentence(naics_descr),
         naics_descr = str_replace_all(naics_descr, "&", "and"))


###### inflation adjustment ######

d_infation_ref <- read_xlsx("./data/ref/us-inflation.xlsx",
                        skip = 13)

inflation_adj <- d_infation_ref$cpi[d_infation_ref$year == 2021] / d_infation_ref$cpi[d_infation_ref$year == 2001]
d_infation_adj <- d_infation_ref |>
  filter(year >= 2001,
         year <= 2021) |>
  mutate(adj = cpi[year == 2021] / cpi)


###### employee category reference ######

est_size_class_levels = c("n1_4", "n5_9", "n10_19", "n20_49", "n50_99", "n100_249", "n250_499", "n500_999", 
                     "n1000")

emp_size_class_levels = c("e1_4", "e5_9", "e10_19", "e20_49", "e50_99", "e100_249", "e250_499", "e500_999", 
                     "e1000")

n_employees_ref <- tibble(
  est_size_class = est_size_class_levels,
  emp_size_class = emp_size_class_levels,
  emp_class_count = c(2, 7, 15, 35, 75, 175, 375, 750, 2000),
  factor_order = 1:9
)

```

```{r}
#| label: define-state-and-county-data

# assume processed data files exist (that cbd-employment-wages.qmd has been run at least once)
d_cbp_data_county <- read_rds("./data/processed/cbp_nc_sector_totals_2001_2021.rds") |>
  mutate(avg_wage = if_else(emp > 0, (ap * 1000) / emp, NA_real_)) |> # nominal avg wage for sector one year
  select(-c(n1000_1:n1000_4))

d_cbp_data_state <- read_rds("./data/processed/cbp_state_sector_totals_2001_2021.rds") |>
  mutate(avg_wage = (ap * 1000) / emp) |> # nominal avg wage for sector one year
  select(-c(lfo)) 

```

```{r}
#| label: define-dataframes
#| eval: true

# est == establishments
# emp == employees


###### NC state ######

d_est_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, naics, est, starts_with("n"))

d_est_sector_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, est, starts_with("n")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_est = est / sum(est),
         .by = "year")

d_emp_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, naics, emp, starts_with("e"), avg_wage) 

d_emp_sector_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, emp, starts_with("e"), avg_wage) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_emp = emp / sum(emp),
         .by = "year")

d_est_state_nc_total_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, est, starts_with("n")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  mutate(est_size_class = as_factor(est_size_class), # keep existing order
         est_size_class = as.ordered(est_size_class),
         pct_est = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_emp_state_nc_total_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, naics, emp, starts_with("e")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(e1_4:e1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  mutate(emp_size_class = as_factor(emp_size_class), # keep existing order
         emp_size_class = as.ordered(emp_size_class),
         pct_emp = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_est_state_nc_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, est, starts_with("n")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  mutate(est_size_class = as_factor(est_size_class), # keep existing order
         est_size_class = as.ordered(est_size_class),
         pct_est = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_emp_state_nc_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, emp, starts_with("e")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(e1_4:e1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  mutate(emp_size_class = as_factor(emp_size_class), # keep existing order
         emp_size_class = as.ordered(emp_size_class),
         pct_emp = value / sum(value),
         .by = "year") |>
  filter(value > 0)


###### NC county ######

d_emp_total_county <- d_cbp_data_county |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipscty, naics, emp) |>
  inner_join(d_fips_county_ref,
             by = c("fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_emp = emp / sum(emp),
         .by = c("year")) |>
  filter(emp > 0)

d_emp_sector_total_county <- d_cbp_data_county |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipscty, naics, emp) |>
  inner_join(d_fips_county_ref,
             by = c("fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_emp = emp / sum(emp),
         .by = c("year")) |>
  filter(emp > 0)

d_emp_county_nc_size_classes <- d_cbp_data_county |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, fipscty, naics, emp, starts_with("n")) |>
  inner_join(d_fips_county_ref,
             by = c("fipstate", "fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  # county data doesn't include employees per size class, so we'll estimate
  inner_join(n_employees_ref,
             by = "est_size_class") |>
  rename(est_value = value) |>
  mutate(value = est_value * emp_class_count) |>
  mutate(emp = if_else(sum(emp) == 0, sum(value), mean(emp)),
         .by = c("year", "fipscty", "naics")) |>
  mutate(pct_emp = value / sum(value),
         .by = c("year", "fipscty")) |>
  filter(value > 0)


###### USA ######

d_est_emp_total_usa <- d_cbp_data_state |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  summarize(# establishments
            est = sum(est, na.rm = TRUE),
            n1_4 = sum(n1_4, na.rm = TRUE),
            n5_9 = sum(n5_9, na.rm = TRUE),
            n10_19 = sum(n10_19, na.rm = TRUE),
            n20_49 = sum(n20_49, na.rm = TRUE),
            n50_99 = sum(n50_99, na.rm = TRUE),
            n100_249 = sum(n100_249, na.rm = TRUE),
            n250_499 = sum(n250_499, na.rm = TRUE),
            n500_999 = sum(n500_999, na.rm = TRUE),
            n1000 = sum(n1000, na.rm = TRUE),
            # employees
            emp = sum(emp, na.rm = TRUE),
            e1_4 = sum(e1_4, na.rm = TRUE),
            e5_9 = sum(e5_9, na.rm = TRUE),
            e10_19 = sum(e10_19, na.rm = TRUE),
            e20_49 = sum(e20_49, na.rm = TRUE),
            e50_99 = sum(e50_99, na.rm = TRUE),
            e100_249 = sum(e100_249, na.rm = TRUE),
            e250_499 = sum(e250_499, na.rm = TRUE),
            e500_999 = sum(e500_999, na.rm = TRUE),
            e1000 = sum(e1000, na.rm = TRUE),
            #avg_wage = weighted.mean(ap * 1000, w = emp),
            .by = c("year", "naics", "naics_descr", "naics_abbr")
            )

d_est_total_usa <- d_est_emp_total_usa |> #
  filter(naics == "------") |>
  select(year, naics, naics_abbr, est, starts_with("n"))

d_est_sector_total_usa <- d_est_emp_total_usa |>
  filter(naics != "------") |>
  select(year, naics, naics_abbr, est, starts_with("n")) |>
  mutate(pct_est = est / sum(est),
         .by = "year")

d_emp_total_usa <- d_est_emp_total_usa |> #
  filter(naics == "------") |>
  select(year, naics, naics_abbr, emp, starts_with("e"))

d_emp_sector_total_usa <- d_est_emp_total_usa |>
  filter(naics != "------") |>
  select(year, naics, naics_abbr, emp, starts_with("e")) |>
  mutate(pct_emp = emp / sum(emp),
         .by = "year")

d_est_usa_total_size_classes <- d_est_emp_total_usa |>
  filter(naics == "------") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  mutate(est_size_class = as_factor(est_size_class), # keep existing order
         est_size_class = as.ordered(est_size_class),
         pct_est = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_emp_usa_total_size_classes <- d_est_emp_total_usa |>
  filter(naics == "------") |>
  pivot_longer(e1_4:e1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  mutate(emp_size_class = as_factor(emp_size_class), # keep existing order
         emp_size_class = as.ordered(emp_size_class),
         pct_emp = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_est_usa_size_classes <- d_est_emp_total_usa |>
  filter(naics != "------") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  mutate(est_size_class = as_factor(est_size_class), # keep existing order
         est_size_class = as.ordered(est_size_class),
         pct_est = value / sum(value),
         .by = "year") |>
  filter(value > 0)


###### for helpful sub-setting ######

top_naics <- d_emp_sector_total_state_nc |>
  filter(year == 2021) |>
  slice_max(order_by = emp, n = top_naics_cutoff) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp),
         naics_sort_order = row_number()) |>
  select(naics, naics_abbr, naics_sort_order)

top_counties_emp <- d_emp_sector_total_county |>
  filter(year == 2021) |>
  summarize(emp_sum = sum(emp),
            .by = county_name) |>
  slice_max(order_by = emp_sum, n = top_county_cutoff)

```

## Number of establishments in NC

The County Business Patterns data refers to relevant organizations as *establishments*, a term that includes corporations, partnerships, non-profit organizations, etc.

The CBP includes establishments categorized by employee size class. The range is embedded in the name. For example, `n1_4` includes a count of establishments with 1-4 employees. The category `n1000` includes establishments with 1,000 or more employees.

For simplicity's sake, the plots below that reference sectors use the sector abbreviations listed in @sec-tables.

<br>

As one might expect, there are many more establishments with a small number of employees. Each subsequent employee size class includes fewer establishments.

```{r fig.height=6, fig.width=12}
#| label: fig-state-establishments-two-plot
#| fig-height: 6
#| fig-width: 12
#| fig-cap: "NC establishments 2021"
#| column: page-inset-right

p1 <- d_est_state_nc_total_size_classes |> 
  filter(year == 2021) |>
  ggplot() +
  geom_col(aes(x = value, y = est_size_class),
           fill = carolina_blue, alpha = 0.6) + 
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Establishments",
    y = "Employee size class",
    color = NULL,
  )

p2 <- d_est_state_nc_total_size_classes |> 
  mutate(est_size_class = as.character(est_size_class)) |>
  filter(year == 2021) |>
  inner_join(n_employees_ref,
             by = "est_size_class") |> 
  mutate(est_size_class = fct_reorder(est_size_class, pct_est)) |>
  arrange(desc(est_size_class)) |>
  mutate(cum_pct = cumsum(pct_est),
         ybar_start = lag(cum_pct, default = 0)) |>
  ggplot() +
  geom_segment(aes(x = est_size_class, xend = est_size_class, y = ybar_start, yend = cum_pct),
           color = carolina_blue, linewidth = 8, alpha = 0.6) + 
  scale_y_continuous(labels = label_percent()) +
  scale_x_discrete(limits=rev) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(
    x = "Employee size class",
    y = "Percent of establishments",
    color = NULL,
  )

p1 + p2 +
  plot_annotation(
    title = "NC establishments in each employee size class",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption
  )

```

<br>

How does NC compare to the USA as a whole in the distribution of establishments? In general, quite similar.

```{r fig.height=6, fig.width=8}
#| label: fig-state-establishments-by-sector-pct-usa-compare
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "NC establishments by sector compared to USA 2021"

nc_naics_abbr_levels <- d_est_sector_total_state_nc |>
  filter(year == 2021) |>
  arrange(pct_est) |>
  pull(naics_abbr)

data_for_plot <- d_est_sector_total_state_nc |>
  filter(year == 2021) |>
  mutate(scope = "nc") |>
  bind_rows(d_est_sector_total_usa |>
              filter(year == 2021) |>
              mutate(scope = "usa")
  ) |>
  select(-c(naics_abbr_num)) |>
  mutate(naics_abbr = factor(naics_abbr, levels = nc_naics_abbr_levels)) |>
  mutate(low_value = min(pct_est),
         high_value = max(pct_est),
         .by = naics_abbr) |>
  mutate(diff_pct = high_value - low_value,
         diff_pct = if_else(pct_est == high_value, diff_pct, -1 * diff_pct)) 

diff_pct_cutoff <- 0.005

data_for_plot |>
  ggplot() +
  geom_segment(aes(x = low_value, xend = high_value, y = naics_abbr, yend = naics_abbr),
               alpha = 0.3) +
  geom_point(aes(x = pct_est, y = naics_abbr, color = scope),
           alpha = 0.6) + 
  geom_point(aes(x = pct_est, y = naics_abbr, color = scope),
           alpha = 0.6) + 
  geom_text(aes(x = high_value, y = naics_abbr,
                label = if_else(diff_pct > diff_pct_cutoff,
                                percent(pct_est, accuracy = .1),
                                NA_character_)),
            na.rm = TRUE, size = 3,
            hjust = 0, nudge_x = 0.003) +
  geom_text(aes(x = low_value, y = naics_abbr,
                label = if_else(diff_pct < -1 * diff_pct_cutoff,
                                percent(pct_est, accuracy = .1),
                                NA_character_)),
            na.rm = TRUE, size = 3,
            hjust = 1, nudge_x = -0.003) +
  scale_x_continuous(labels = label_percent()) +
  scale_color_manual(values = c(carolina_blue, "firebrick")) +
  theme(legend.position = c(0.8, 0.4),
        legend.box.background = element_rect(fill = "grey80")) +
  labs(
    title = "NC establishments by sector\ncompared to USA 2021",
    subtitle = glue("Includes all 100 counties and 'Statewide'", 
                    "; showing percentages where difference is > {percent(diff_pct_cutoff, accuracy = 0.1)}"),
    x = "Establishements",
    y = "",
    color = NULL,
    caption = my_caption
  )

```

<br>

```{r fig.height=8, fig.width=12}
#| label: fig-state-establishments-naics-pct-two-plot
#| fig-height: 8
#| fig-width: 12
#| fig-cap: "Percent of NC establishments in each employee size class by sector 2021"
#| column: page-inset-right

data_for_plot <- d_est_state_nc_size_classes |>
  filter(year == 2021) 

p1 <- data_for_plot |>
  mutate(naics_abbr = fct_lump(naics_abbr, 9, w = value)) |>
  ggplot() +
  geom_col(aes(x = pct_est, y = est_size_class, fill = naics_abbr),
           alpha = 0.6, show.legend = FALSE) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Percent of establishments",
    y = "Employee size class",
    color = NULL
  )

p2 <- data_for_plot |>
  mutate(naics_abbr = fct_lump(naics_abbr, 9, w = value)) |>
  ggplot() +
  geom_col(aes(x = pct_est, y = est_size_class, fill = naics_abbr),
           alpha = 0.6, position = position_fill()) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Distribution of size classes",
    y = "Employee size class",
    color = NULL
  )

p3 <- data_for_plot |>
  mutate(naics_abbr = fct_reorder(naics_abbr, pct_est, sum)) |>
  ggplot() +
  geom_col(aes(y = naics_abbr, x = pct_est, fill = est_size_class),
           alpha = 0.6, show.legend = FALSE) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_fill_viridis_d(end = 0.85) +
  labs(
    x = "Percent of establishments",
    y = NULL,
    color = NULL
  )

p4 <- data_for_plot |>
  mutate(naics_abbr = fct_reorder(naics_abbr, pct_est, sum)) |>
  ggplot() +
  geom_col(aes(y = naics_abbr, x = pct_est, fill = est_size_class),
           alpha = 0.6,position = position_fill()) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_fill_viridis_d(end = 0.85) +
  labs(
    x = "Distribution of NAICS categories",
    y = NULL,
    color = NULL
  )

(p1 + p2) / (p3 + p4) +
  plot_annotation(
    title = "Percent of NC establishments in each employee size class by sector",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption
  )
  
```

<br>

## Trends in the number of establishements

```{r fig.height=10, fig.width=12}
#| label: fig-state-establishments-naics-timeseries
#| fig-height: 10
#| fig-width: 12
#| fig-cap: "NC establishments in each sector 2001-2021"
#| column: page-inset-right
#| warning: false

data_for_plot <- d_est_sector_total_state_nc |>
  filter(naics_abbr != "OtherInd") |>
  mutate(naics_abbr = fct_reorder(naics_abbr, -est)
         ) |>
  mutate(est_fist_year = est[year == min(year)],
         est_last_year = est[year == max(year)],
         .by = c("naics")) |>
  mutate(pct_est_diff = est_last_year / est_fist_year - 1)

labels_for_plot <- data_for_plot |>
  filter(year == max(year))

p1 <- data_for_plot |>
  filter(naics_abbr != "Other") |>
  ggplot() +
  geom_line(aes(x = year, y = est, color = naics_abbr, group = naics_abbr),
           linewidth = 0.4, alpha = 0.6, show.legend = FALSE) +
  geom_text_repel(data = labels_for_plot,
                  aes(x = year + 0.5, y = est, label = naics_abbr, color = naics_abbr),
                  direction = "y", hjust = 0, vjust = 0.5, size = 3,
                  min.segment.length = unit(1, "cm"), force_pull = 100,
                  seed = 123,
                  show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  expand_limits(x = 2026,
                y = 0) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    subtitle = "NC establishments in each sector",
    x = "",
    y = "Number of establishments",
    color = NULL,
    caption = my_caption
  )

p2 <- data_for_plot |>
  filter(naics_abbr != "Other") |>
  ggplot() +
  geom_area(aes(x = year, y = est, color = naics_abbr, fill = naics_abbr, group = naics_abbr),
           linewidth = 0.4, alpha = 0.6, show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale()),
                     expand = expansion(mult = c(0, 0.02))) +
  expand_limits(#x = 2026,
                y = 0) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    subtitle = "NC establishments combined trend",
    x = "",
    y = "Number of establishments",
    color = NULL,
    caption = my_caption
  )

p3 <- data_for_plot |>
  filter(year == 2021,
         est != 0) |>
  ggplot(aes(est, pct_est_diff, color = naics_abbr)) +
  geom_hline(yintercept = 0, lty = 2, size = 0.2, alpha = 0.2) +
  geom_label(aes(label = naics_abbr),
             show.legend = FALSE, hjust = 0.5, vjust = 0.5) +
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = label_percent()) +
  labs(
    subtitle = glue("What is the percent change in establishments since 2001?"),
    x = "Establishments in NC in 2021",
    y = "Pct change since 2001"
    )

(p1 + p2) / p3 +
  plot_annotation(
    title = "NC establishments in each sector 2001-2021",
    subtitle = "Includes all sectors reported in CBP",
    caption = my_caption
  )

```


<br>

How has the portion of establishments changed over time?

```{r fig.height=8, fig.width=10}
#| label: fig-state-establishments-pct-timeseries
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Percent of NC establishments by employee size class 2001-2021 for top sectors"
#| column: page-inset-right

# TODO: should I lump on 2021 top sectors? (currently considering whole time range)

data_for_plot <- d_est_state_nc_size_classes |>
  mutate(naics_abbr = fct_lump(naics_abbr, 9, w = value)) |>
  filter(naics_abbr != "Other")

data_for_plot |>
  ggplot() +
  geom_line(aes(x = year, y = pct_est, color = est_size_class, group = est_size_class),
           linewidth = 0.4, alpha = 0.6) +
  scale_y_continuous(labels = label_percent(accuracy = 0.1)) +
  facet_wrap(. ~ naics_abbr, scales = "free_y") +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Percent of NC establishments in each employee size class\nby sector 2001-2021",
    subtitle = "Top 9 sectors by number of establishments (in 2021) as reported in CBP",
    x = "",
    y = "Percent of establishments (scale varies)",
    color = NULL,
    caption = my_caption
  )

```

<br>

## Table

Sorted by percent difference from 2001 to 2021

```{r}
#| label: tbl-state-nc-est
#| tbl-cap: "NC state establishments by sector 2021"
#| tbl-cap-location: bottom

d_est_sector_total_state_nc |>
  filter(naics_abbr != "OtherInd") |>
  mutate(naics_abbr = fct_reorder(naics_abbr, -est)
         ) |>
  mutate(est_fist_year = est[year == min(year)],
         est_last_year = est[year == max(year)],
         .by = c("naics")) |>
  mutate(pct_est_diff = est_last_year / est_fist_year - 1) |>
  filter(year == 2021) |>
  select(naics, naics_abbr, est_2021 = est, pct_est_2021 = pct_est, pct_est_diff_since_2001 = pct_est_diff) |>
  arrange(-pct_est_diff_since_2001) |>
  mutate(rowid = row_number()) |>
  gt() |>
  tab_header(md(glue("**NC sector establishments in 2021 and growth since 2001**",
                     "<br>*Sorted by growth since 2001*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10) |>
  fmt_number(columns = c(est_2021),
             decimals = 0) |>
  fmt_percent(columns = c(pct_est_2021, pct_est_diff_since_2001),
             decimals = 0)
```

<br>

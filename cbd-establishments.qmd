# NC establishments 2001-2021

```{r}
#| include: false

source("./scripts/setup.R")

data_label_size <- 3.5 # for plots using labels as data points

```

```{r}
# since no change in NC county FIPS codes over this time period, I can use the latest
# includes fipscty 999 "Statewide" that corresponds to employment not associated with a county
d_fips_county_ref <- read_csv("./data/ref/georef17.txt",
                      col_types = "ccc",
                      show_col_types = FALSE) |>
  rename(fipstate = st,
         fipscty = cty,
         county_name = ctyname) |>
  filter(fipstate == "37") |>
  mutate(county_name = str_remove(county_name, " County, North Carolina$"),
         county_name = if_else(county_name == "Statewide, North Carolina", "Statewide, NC", county_name))

d_fips_state_ref <- read_csv("./data/ref/georef17.txt",
                      col_types = "ccc",
                      show_col_types = FALSE) |>
  distinct(st, .keep_all = TRUE) |>
  mutate(state_name = str_extract(ctyname, "(?<=, ).*$")) |>
  select(fipstate = st,
         state_name)

# Since sector total codes and descriptions have not changed in this time period, I'll use the latest
# TODO: confirm this assumption!!
d_naics_ref_2021 <- read_csv("./data/ref/naics2017.txt",
                      col_types = "cc",
                      show_col_types = FALSE) |>
  clean_names()|>
  mutate_if(is.character, ~ purrr::map_chr(.x, iconv, "UTF-8", "UTF-8", sub='')) %>% # just in case
  rename(naics_descr = description) |>
  mutate(naics_descr = str_to_sentence(naics_descr),
         naics_descr = str_replace_all(naics_descr, "&", "and"))

d_naics_abbr_ref <- tribble(
  ~ naics_descr,                                                                 ~naics_abbr_num,  ~naics_abbr,
   "Agriculture, Forestry, Fishing and Hunting",                                  3,               "AgForFish",
   "Utilities",                                                                   17,              "Util",
   "Construction",                                                                5,               "Constr",
   "Manufacturing",                                                               10,              "Manuf",
   "Wholesale Trade",                                                             18,              "Whlsale",
   "Retail Trade",                                                                15,              "Retail",
   "Transportation and Warehousing",                                              16,              "Transpt",
   "Information",                                                                 9,               "Info",
   "Finance and Insurance",                                                       7,               "FinIns",
   "Real Estate and Rental and Leasing",                                          14,              "RealEst",
   "Professional, Scientific, and Technical Services",                            13,              "ProfSciTec",
   "Management of Companies and Enterprises",                                     12,              "Mgmt",
   "Administrative and Support and Waste Management and Remediation Services",    2,               "AdminWaste",
   "Educational Services",                                                        6,               "Educ",
   "Health Care and Social Assistance",                                           8,               "HeathSoc",
   "Arts, Entertainment, and Recreation",                                         4,               "ArtEntRec",
   "Accommodation and Food Services",                                             1,               "AccFood",
   "Other Services (except Public Administration)",                               19,              "OtherServ",
   "Industries not classified",                                                   20,              "OtherInd",
   "Mining, Quarrying, and Oil and Gas Extraction",                               11,              "MineOilGas"
) |>
  mutate(naics_descr = str_to_sentence(naics_descr))

d_naics_ref_2021 <- read_csv("./data/ref/naics2017.txt",
                      col_types = "cc",
                      show_col_types = FALSE) |>
  clean_names()|>
  mutate_if(is.character, ~ purrr::map_chr(.x, iconv, "UTF-8", "UTF-8", sub='')) %>% # just in case
  rename(naics_descr = description) |>
  mutate(naics_descr = str_to_sentence(naics_descr),
         naics_descr = str_replace_all(naics_descr, "&", "and"))


# assume file exists (that cbd-employment-wages.qmd has been run at least once)
d_cbp_data <- read_rds("./data/processed/cbp_nc_sector_totals_2001_2021.rds")

d_cbp_data_state <- read_rds("./data/processed/cbp_state_sector_totals_2001_2021.rds")

```

The data includes "noise flags". Noise is larger where numbers are lower. The state total is reported along with employee size class. If we sum the smaller employee categories, how far are the results from teh reported totals?


```{r fig.height=8, fig.width=10}
#| label: fig-establishments-employee-count-quality-check
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Number of employees - quality check"

data_for_plot <- d_cbp_data_state |>
  select(year, fipstate, naics,
         starts_with("e"),
         -ends_with(c("F")),
         -est) |>
  rowwise() |>
  mutate(emp_sum = sum(c_across(e1_4:e1000)),
         diff = emp - emp_sum,
         pct = diff/emp) |>
  filter(emp > 0,
         !naics %in% c("99----")) # exclude 'OtherInd'

n_no_cat_values <- data_for_plot |>
  filter(pct == 1) |>
  nrow()

n_no_error <- data_for_plot |>
  filter(pct == 0) |>
  nrow()

all_rows <- nrow(data_for_plot)

data_for_plot |>
  ggplot() +
  geom_point(aes(x = emp, y = pct, color = year),
             alpha = 0.4, size = 0.4, na.rm = TRUE) +
  scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = label_percent()) +
  scale_color_viridis_c(end = 0.85) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Pct diff from reported number of employees (all states)",
    subtitle = glue("{comma(all_rows)} data points 2001-2021;",
                    "; 'pct diff' cacluated as (stated - summed) / stated",
                    "\n{comma(n_no_cat_values)} ({percent(n_no_cat_values / all_rows)}) report no category values (only state-level value)",
                    "\n{comma(n_no_error)} ({percent(n_no_error / all_rows)}) report no error (category values sum to state-level value)"),
    x = "Employees (log10 scale)",
    y = "Pct diff from stated",
    caption = my_caption
  )

data_for_plot |>
  mutate(magnitude = floor(log10(emp))) |>
  filter(magnitude >= 2) |>
  ggplot() +
  stat_ecdf(aes(pct, color = magnitude, group = magnitude),
            pad = FALSE, linewidth = 1, alpha = 0.6) +
  # geom_point(aes(x = emp, y = pct, color = year),
  #            alpha = 0.4, size = 0.4, na.rm = TRUE) +
  scale_x_continuous(labels = label_percent()) +
  scale_y_continuous(labels = label_percent()) +
  scale_color_viridis_c(end = 0.85) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Cumulative distribution\nAs expected: smaller numbers have more error",
    subtitle = glue("{comma(all_rows)} data points 2001-2021 (all states)",
                    "; excluding NAICS 'OtherInd' and any category with < 100 employees reported that year",
                    "\n'pct diff' calculated as (stated - summed) / stated",
                    "\nmagnitude calculated as floor(log10(number_of_employees_in_state_for_a_naics_category))"),
    x = "Pct diff from stated",
    y = "Pct of all data points of one magnitude",
    color = "Magnitude\n(10^M)",
    caption = my_caption
  )

```

```{r}
est_emp_size_class_levels = c("n1_4", "n5_9", "n10_19", "n20_49", "n50_99", "n100_249", "n250_499", "n500_999", 
                     "n1000")

emp_size_class_levels = c("e1_4", "e5_9", "e10_19", "e20_49", "e50_99", "e100_249", "e250_499", "e500_999", 
                     "e1000")

n_employees_ref <- tibble( # note: excluding n1000
  emp_size_class = est_emp_size_class_levels,
  emp_class_count = c(2, 7, 15, 35, 75, 175, 375, 750, 2000),
  factor_order = 19
)

d_total_est_county <- d_cbp_data |>
  inner_join(d_fips_county_ref,
             by = c("fipstate" , "fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  summarize(est = sum(est, na.rm = TRUE),
            n1_4 = sum(n1_4, na.rm = TRUE),
            n5_9 = sum(n5_9, na.rm = TRUE),
            n10_19 = sum(n10_19, na.rm = TRUE),
            n20_49 = sum(n20_49, na.rm = TRUE),
            n50_99 = sum(n50_99, na.rm = TRUE),
            n100_249 = sum(n100_249, na.rm = TRUE),
            n250_499 = sum(n250_499, na.rm = TRUE),
            n500_999 = sum(n500_999, na.rm = TRUE),
            n1000 = sum(n1000, na.rm = TRUE), # 1000 and above; remove if using n1000_*
            # n1000_1 = sum(n1000_1, na.rm = TRUE),
            # n1000_2 = sum(n1000_2, na.rm = TRUE),
            # n1000_3 = sum(n1000_3, na.rm = TRUE),
            # n1000_4 = sum(n1000_4, na.rm = TRUE),
            .by = c(year, fipscty))

d_sector_totals_county_nc <- d_cbp_data |>
  mutate(avg_wage = (ap * 1000) / emp) |>
  inner_join(d_fips_county_ref,
             by = c("fipstate" , "fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr")

d_total_est_emp_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37") |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  summarize(est = sum(est, na.rm = TRUE),
            n1_4 = sum(n1_4, na.rm = TRUE),
            n5_9 = sum(n5_9, na.rm = TRUE),
            n10_19 = sum(n10_19, na.rm = TRUE),
            n20_49 = sum(n20_49, na.rm = TRUE),
            n50_99 = sum(n50_99, na.rm = TRUE),
            n100_249 = sum(n100_249, na.rm = TRUE),
            n250_499 = sum(n250_499, na.rm = TRUE),
            n500_999 = sum(n500_999, na.rm = TRUE),
            n1000 = sum(n1000, na.rm = TRUE), # 1000 and above; remove if using n1000_*
            # n1000_1 = sum(n1000_1, na.rm = TRUE),
            # n1000_2 = sum(n1000_2, na.rm = TRUE),
            # n1000_3 = sum(n1000_3, na.rm = TRUE),
            # n1000_4 = sum(n1000_4, na.rm = TRUE),
            .by = c("year")) |>
  pivot_longer(n1_4:n1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  #filter(emp_size_class != "n1000") |>
  mutate(emp_size_class = as_factor(est_emp_size_class_levels),
         emp_size_class = as.ordered(emp_size_class),
         pct = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_sector_totals_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37") |>
  mutate(avg_wage = (ap * 1000) / emp) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr")

# d_sector_totals_state <- d_sector_totals_county_nc |>
#   summarize(est = sum(est, na.rm = TRUE),
#             n1_4 = sum(n1_4, na.rm = TRUE),
#             n5_9 = sum(n5_9, na.rm = TRUE),
#             n10_19 = sum(n10_19, na.rm = TRUE),
#             n20_49 = sum(n20_49, na.rm = TRUE),
#             n50_99 = sum(n50_99, na.rm = TRUE),
#             n100_249 = sum(n100_249, na.rm = TRUE),
#             n250_499 = sum(n250_499, na.rm = TRUE),
#             n500_999 = sum(n500_999, na.rm = TRUE),
#             n1000 = sum(n1000, na.rm = TRUE), # 1000 and above; remove if using n1000_*
#             n1000_1 = sum(n1000_1, na.rm = TRUE),
#             n1000_2 = sum(n1000_2, na.rm = TRUE),
#             n1000_3 = sum(n1000_3, na.rm = TRUE),
#             n1000_4 = sum(n1000_4, na.rm = TRUE),
#             .by = c(year, naics, naics_abbr, naics_descr))

# d_state_totals <- d_sector_totals_state |>
#   summarize(est = sum(est, na.rm = TRUE),
#             n1_4 = sum(n1_4, na.rm = TRUE),
#             n5_9 = sum(n5_9, na.rm = TRUE),
#             n10_19 = sum(n10_19, na.rm = TRUE),
#             n20_49 = sum(n20_49, na.rm = TRUE),
#             n50_99 = sum(n50_99, na.rm = TRUE),
#             n100_249 = sum(n100_249, na.rm = TRUE),
#             n250_499 = sum(n250_499, na.rm = TRUE),
#             n500_999 = sum(n500_999, na.rm = TRUE),
#             n1000 = sum(n1000, na.rm = TRUE), # 1000 and above; remove if using n1000_*
#             n1000_1 = sum(n1000_1, na.rm = TRUE),
#             n1000_2 = sum(n1000_2, na.rm = TRUE),
#             n1000_3 = sum(n1000_3, na.rm = TRUE),
#             n1000_4 = sum(n1000_4, na.rm = TRUE),
#             .by = c(year)
#             ) |>
#   pivot_longer(n1_4:n1000_4,
#                names_to = "emp_size_class",
#                values_to = "value") |>
#   filter(emp_size_class != "n1000") |>
#   mutate(emp_size_class = as_factor(est_emp_size_class_levels),
#          emp_size_class = as.ordered(emp_size_class),
#          pct = value / sum(value),
#          .by = "year") |>
#   filter(value > 0)

# TODO: choose correct starting data
d_totals_usa <- d_cbp_data_state |>
  #filter(fipstate == "37") |>
  #mutate(avg_wage = (ap * 1000) / emp) |>
  # inner_join(d_fips_state_ref,
  #            by = c("fipstate")) |>
  # inner_join(d_naics_ref_2021,
  #            by = "naics") |>
  # inner_join(d_naics_abbr_ref,
  #            by = "naics_descr") |>
  summarize(est = sum(est, na.rm = TRUE),
            n1_4 = sum(n1_4, na.rm = TRUE),
            n5_9 = sum(n5_9, na.rm = TRUE),
            n10_19 = sum(n10_19, na.rm = TRUE),
            n20_49 = sum(n20_49, na.rm = TRUE),
            n50_99 = sum(n50_99, na.rm = TRUE),
            n100_249 = sum(n100_249, na.rm = TRUE),
            n250_499 = sum(n250_499, na.rm = TRUE),
            n500_999 = sum(n500_999, na.rm = TRUE),
            n1000 = sum(n1000, na.rm = TRUE), # 1000 and above; remove if using n1000_*
            # n1000_1 = sum(n1000_1, na.rm = TRUE),
            # n1000_2 = sum(n1000_2, na.rm = TRUE),
            # n1000_3 = sum(n1000_3, na.rm = TRUE),
            # n1000_4 = sum(n1000_4, na.rm = TRUE),
            .by = c(year)
            ) |>
  pivot_longer(n1_4:n1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  #filter(emp_size_class != "n1000") |>
  mutate(emp_size_class = as_factor(est_emp_size_class_levels),
         emp_size_class = as.ordered(emp_size_class),
         pct = value / sum(value),
         .by = "year") |>
  filter(value > 0)

```

The County Business Patterns data includes counts of establishments by number of workers. The category names embed the range. For example, `n1_4` includes establishments reporting 1-4 workers. Establishments in `n1000` have 1,000 or more employees.

<br>

## Number of establishments and workers per employee size class in NC

For simplicity's sake, the plots below that reference sectors use the sector abbreviations listed in @sec-tables.

```{r fig.height=6, fig.width=12}
#| label: fig-state-establishments-two-plot
#| fig-height: 6
#| fig-width: 12
#| fig-cap: "NC establishments 2021"
#| column: page-inset-right

p1 <- d_total_est_emp_state_nc |>
  filter(year == 2021) |>
  ggplot() +
  geom_col(aes(x = value, y = emp_size_class),
           fill = carolina_blue, alpha = 0.6) + 
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Establishments",
    y = "Employee size class",
    color = NULL,
  )

p2 <- d_total_est_emp_state_nc |>
  filter(year == 2021) |>
  inner_join(n_employees_ref,
             by = "emp_size_class") |>
  mutate(emp_size_class = fct_reorder(emp_size_class, pct)) |>
  arrange(desc(emp_size_class)) |>
  mutate(cum_pct = cumsum(pct),
         ybar_start = lag(cum_pct, default = 0)) |>
  ggplot() +
  geom_segment(aes(x = emp_size_class, xend = emp_size_class, y = ybar_start, yend = cum_pct),
           color = carolina_blue, linewidth = 8, alpha = 0.6) + 
  scale_y_continuous(labels = label_percent()) +
  scale_x_discrete(limits=rev) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(
    x = "Employee size class",
    y = "Percent of establishments",
    color = NULL,
  )

p1 + p2 +
  plot_annotation(
    title = "NC establishments in each employee size class",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption
  )

```

<br>

Let's assume that the average number of workers in each employment size class is about the midpoint of the class. From the perspective of workers, what are the most common employer size classes?

```{r fig.height=6, fig.width=12}
#| label: fig-state-workers
#| fig-height: 6
#| fig-width: 12
#| fig-cap: "NC workers in each employee size class 2021"
#| column: page-inset-right

p1 <- d_total_est_emp_state_nc |>
  filter(year == 2021) |>
  inner_join(n_employees_ref,
             by = "emp_size_class") |>
  mutate(emp = value * emp_class_count,
         pct_emp = emp / sum(emp)) |>
  #mutate(emp_size_class = fct_reorder(emp_size_class, factor_order)) |> # -emp)) |> # reverse factors for plotting
  mutate(emp_size_class = factor(emp_size_class, est_emp_size_class_levels)) |> # -emp)) |> # reverse factors for plotting
  ggplot() +
  geom_col(aes(x = pct_emp, y = emp_size_class),
           fill = carolina_blue, alpha = 0.6) +
  scale_x_continuous(labels = label_percent()) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Percent of employees",
    y = "Employee size class",
    color = NULL,
  )

p2 <- d_total_est_emp_state_nc |>
  filter(year == 2021) |>
  inner_join(n_employees_ref,
             by = "emp_size_class") |>
  mutate(emp = value * emp_class_count,
         pct_emp = emp / sum(emp)) |>
  mutate(emp_size_class = fct_reorder(emp_size_class, pct_emp)) |>
  arrange(desc(emp_size_class)) |>
  mutate(cum_pct_emp = cumsum(pct_emp),
         ybar_start = lag(cum_pct_emp, default = 0)) |>
  ggplot() +
  geom_segment(aes(x = emp_size_class, xend = emp_size_class, y = ybar_start, yend = cum_pct_emp),
           color = carolina_blue, linewidth = 8, alpha = 0.6) + 
  scale_y_continuous(labels = label_percent()) +
  scale_x_discrete(limits=rev) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(
    x = "Employee size class",
    y = "Percent of employees",
    color = NULL,
  )

p1 + p2 +
  plot_annotation(
    title = "Percent of NC employees working for establishments\nin each employee size class",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption,
    #theme = theme(plot.title = element_text(size = 16))
  )
  
```

<br>

```{r fig.height=6, fig.width=12}
#| label: fig-state-establishments-employees-naics-pct-two-plot
#| fig-height: 6
#| fig-width: 12
#| fig-cap: "Percent of NC workers in each employee size class by sector 2021"
#| column: page-inset-right

data_for_plot <- d_sector_totals_state_nc |>
  #filter(year == 2021) |>
  pivot_longer(n1_4:n1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  #filter(emp_size_class != "n1000") |>
  mutate(pct = value / sum(value),
         .by = "year") |>
  filter(value > 0) |>
  inner_join(n_employees_ref,
             by = "emp_size_class") |>
  mutate(emp_in_size_class = value * emp_class_count,
         pct_emp_in_size_class = emp_in_size_class / sum(emp_in_size_class),
         .by = "year") |>
  mutate(emp_size_class = factor(emp_size_class, est_emp_size_class_levels),
         emp_size_class = as.ordered(emp_size_class),
         naics_abbr = fct_lump(naics_abbr, n = 9, w = pct_emp_in_size_class )) 

p1 <- data_for_plot |>
  filter(year == 2021) |>
  ggplot() +
  geom_col(aes(x = pct_emp_in_size_class, y = emp_size_class, fill = naics_abbr),
           alpha = 0.6) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Percent of employees",
    y = "Employee size class",
    color = NULL
  )

p2 <- data_for_plot |>
  filter(year == 2021) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, -pct_emp_in_size_class, sum)) |>
  ggplot() +
  geom_col(aes(x = naics_abbr, y = pct_emp_in_size_class, fill = emp_size_class),
           alpha = 0.6) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  labs(
    x = NULL,
    y = "Percent of employees",
    color = NULL
  )

p1 + p2 +
  plot_annotation(
    title = "Percent of NC workers in each employee size class by sector",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption
  )
  
```

<br>

The portion of employees in each employee class size varies over time and across sectors. Decade-long trends are visible: 

* The share of employees in the Accommodation and Food sector has been increasing in most employee size classes
* The share in Manufacturing has been in noticable decline, especially through 2015 and in the larger employee size classes
* Construction slowed significantly after the 2008 financial crisis.

In the HealthSoc, Retail, and ProfSciTec sectors there are cases of big changes from one year to the next in multiple employee size classes. I wonder if this is due to changes in NAICS categories, changes in measurement methodology, or a real change in that sector.

Noise added to some data before release may be the cause of the jumpiness in some of the least common employee size classes.

```{r fig.height=8, fig.width=10}
#| label: fig-state-establishments-employees-naics-pct-timeseries
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Percent of NC workers in each employee size class by sector"
#| column: page-inset-right

data_for_plot |>
  filter(naics_abbr != "Other") |>
  ggplot() +
  geom_line(aes(x = year, y = pct_emp_in_size_class, color = emp_size_class, group = emp_size_class),
           linewidth = 0.4, alpha = 0.6) +
  scale_y_continuous(labels = label_percent(accuracy = 0.1)) +
  facet_wrap(. ~ naics_abbr, scales = "free_y") +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Percent of NC workers in each employee size class\nby sector 2001-2021",
    subtitle = "Top 9 sectors by number of employees (in 2021) as reported in CBP",
    x = "",
    y = "Percent of employees (scale varies)",
    color = NULL,
    caption = my_caption
  )

```

<br>

There is variation across counties too.

```{r fig.height=12, fig.width=10}
#| label: fig-county-naics-establishments-time-series-pct
#| fig-height: 12
#| fig-width: 10
#| fig-cap: "NC state employes by establishment size class and sector (percent) 2021-2021"
#| column: page-inset-right

data_for_plot <- d_sector_totals_county_nc |>
  #filter(year == 2021) |>
  pivot_longer(n1_4:n1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  #filter(emp_size_class != "n1000") |>
  mutate(pct = value / sum(value),
         .by = c("year", "county_name")) |>
  filter(value > 0) |>
  inner_join(n_employees_ref,
             by = "emp_size_class") |>
  mutate(emp_in_size_class = value * emp_class_count,
         pct_emp_in_size_class = emp_in_size_class / sum(emp_in_size_class),
         .by = c("year", "county_name")) |>
  mutate(emp_size_class = factor(emp_size_class, est_emp_size_class_levels),
         emp_size_class = as.ordered(emp_size_class),
         naics_abbr = fct_lump(naics_abbr, n = 8, w = pct_emp_in_size_class ),
         county_name = fct_lump(county_name, n = 10, w = emp)) 

data_for_plot |>
  filter(naics_abbr != "Other",
         county_name != "Other") |>
  ggplot() +
  geom_line(aes(x = year, y = pct_emp_in_size_class, color = emp_size_class, group = emp_size_class),
           linewidth = 0.4, alpha = 0.6) +
  scale_y_continuous(labels = label_percent(accuracy = 0.01)) +
  facet_grid(county_name ~ naics_abbr, scales = "free_y") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Percent of workers in each employee size class\nby sector and county 2001-2021",
    subtitle = "Top 8 sectors in largest 10 largest counties by employment (in 2021) as reported in CBP",
    x = "",
    y = "Percent of employees (scale varies by row)",
    color = NULL,
    caption = my_caption
  )
  
```

<br>

## Establisments and employee size class

TODO: MOVE THIS LATER

Employee counts with simple categories

* tiny: 0-4 employees
* small: 5-49
* medium: 50-499
* large 500 or more

***TODO: perhaps use "percent of county workers" on X axis***

```{r fig.height=8, fig.width=10}
#| label: fig-establishments-employee-count
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Number of employees"

data_for_plot <- d_sector_totals_county_nc |>
  filter(year == 2021) |> 
  select(county_name, naics_descr, est, n1_4:n1000_4, -n1000) |>
  filter(est > 0) |>
  pivot_longer(n1_4:n1000_4,
               names_to = "emp_size_class",
               values_to = "value") |>
  filter(value > 0) |>
  mutate(pct = value / sum(value),
         .by = county_name) |>
 left_join(n_employees_ref,
            by = "emp_size_class") |>
  mutate(employee_count = value * emp_class_count,
         emp_size_class_simple = case_when(
          emp_size_class %in% c("n1_4")                                                  ~ "tiny",
          emp_size_class %in% c("n5_9", "n10_19", "n20_49")                              ~ "small",
          emp_size_class %in% c("n50_99", "n100_249", "n250_499")                        ~ "medium",
          emp_size_class %in% c("n500_999", "n1000_1", "n1000_2", "n1000_3", "n1000_4")  ~ "large",
         ),
         emp_size_class_simple = as.ordered(factor(emp_size_class_simple,
                                            levels = c("tiny", "small", "medium", "large"))
                                            )
         ) |>
   mutate(emp_size_class = as_factor(emp_size_class), # keeps same order as data
         emp_size_class = as.ordered(emp_size_class),
         )

data_for_plot |>
  ggplot() +
  geom_point(aes(x = employee_count, y = est, color = emp_size_class_simple),
             alpha = 0.4, size = 0.4, na.rm = TRUE) +
  geom_smooth(aes(x = employee_count, y = est, color = emp_size_class_simple, group = emp_size_class_simple),
              se = FALSE, formula = 'y ~ x', method = 'loess', span = 10, na.rm = TRUE) +
  scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_log10() +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Number of NC establishments by number of workers 2021",
    subtitle = "Employee classes consolidated into simple categories",
    x = "Worker count (log10 scale)",
    y = "Number of establishments (log10 scale)",
    color = "Simple employee class",
    caption = my_caption
  )

```

***TODO: Does the above graph tell us anything interesting? If not delete.***

<br>

```{r}
knitr::knit_exit()

```

<br>

```{r}
top_naics_cutoff <- 5

top_naics <- d_sector_totals_state |>
  filter(year == 2021) |>
  slice_max(order_by = emp, n = top_naics_cutoff) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp),
         naics_sort_order = row_number()) |>
  select(naics, naics_abbr, naics_sort_order)

top_county_cutoff <- 10

top_counties_emp <- d_sector_totals_county_nc |>
  filter(year == 2021) |>
  summarize(emp_sum = sum(emp),
            .by = county_name) |>
  slice_max(order_by = emp_sum, n = top_county_cutoff)
  
```

## NC employment by sector

For simplicity's sake, the plots below use sector abbreviations listed in @sec-tables.

```{r fig.height=6, fig.width=8}
#| label: fig-state-employment-by-sector-count
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "NC state employment by sector 2021"

d_sector_totals_state |>
  filter(year == 2021) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp)) |>
  ggplot() +
  geom_col(aes(x = emp, y = naics_abbr),
           fill = carolina_blue, alpha = 0.6) + # carolina_blue is Carolina blue
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  labs(
    title = "NC state employment by sector 2021",
    #subtitle = "Includes all sectors reported in CBP in each county",
    x = "Employees",
    y = "",
    color = NULL,
    caption = my_caption
  )
```

<br>

## Top sectors in largest counties

```{r}
d_nc_2021_top5 <- d_sector_totals_county_nc |>
  filter(year == 2021) |>
  inner_join(top_counties_emp,
            by = "county_name") |>
  slice_max(order_by = emp,
            n = 5,
            by = "fipscty") |>
  mutate(n_cat = n(),
         emp_rank = n_cat + 1 - rank(emp,
                             ties.method = "random"),.by = fipscty)
```


```{r fig.height=10, fig.width=14}
#| label: fig-rank-employee-count-top-counties-pct
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Sector percent of country emplyment rank"

county_name_label <- d_sector_totals_county_nc |>
  filter(year == 2021) |>
  select(year, fipscty, emp, county_name, naics) |>
  summarize(emp_sum = sum(emp),
            .by = county_name) |>
  slice_max(order_by = emp_sum, n = 10) |>
  mutate(county_name_label = glue("{county_name}\n{comma(emp_sum)}"),
         county_name_label = fct_reorder(county_name_label, -emp_sum))

data_for_plot <- d_nc_2021_top5 |>
  select(county_name, emp, naics, naics_descr, emp_rank) |>
  left_join(d_naics_abbr_ref,
             by = c("naics_descr")) |>
  left_join(county_name_label,
             by = c("county_name")) |>
  mutate(pct_emp = emp / emp_sum,
         county_name_label = fct_reorder(county_name_label, -emp, sum)) |>
  complete(county_name_label, naics_abbr, fill = list(emp = NA, pct_emp = NA)) 

data_for_plot |> 
  ggplot() +
  geom_line(aes(x = county_name_label, y = pct_emp, group = naics_abbr, color = naics_abbr),
            show.legend = FALSE, na.rm = TRUE) +
  geom_label(aes(x = county_name_label, y = pct_emp, label = naics_abbr, fill = naics_abbr),
             show.legend = FALSE, na.rm = TRUE, alpha = 0.4, size = data_label_size) +
  scale_x_discrete(position = "top") +
  scale_y_continuous(labels = label_percent()) +
  theme(axis.text.x = element_text(size = 10)) +
  labs(
    title = "Top 5 sectors in 10 largest counties:\npercent of county employment",
    subtitle = glue("Ordered by total county employment reported in CBP",
                    "; 'Statewide' refers to employees not associated with one county"),
    x = "",
    y = "Percent of county employment",
    color = NULL,
    caption = my_caption
  )
  
```

<br>

```{r fig.height=8, fig.width=10}
#| label: fig-rank-employee-count-top-counties-rank
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Sector rank by number of employees"

data_for_plot |>
  ggplot() +
  geom_line(aes(x = county_name_label, y = emp_rank, group = naics_abbr, color = naics_abbr),
            show.legend = FALSE, na.rm = TRUE) +
  geom_label(aes(x = county_name_label, y = emp_rank, label = naics_abbr, fill = naics_abbr),
             show.legend = FALSE, na.rm = TRUE, alpha = 0.4, size = data_label_size) +
  scale_x_discrete(position = "top") +
  scale_y_reverse() +
  theme(axis.text.x = element_text(size = 10)) +
  labs(
    title = "Top 5 sectors in 10 largest counties: ranking",
    subtitle = glue("Ordered by total county employment reported in CBP",
                    "; 'Statewide' refers to workers not associated with one county"),
    x = "",
    y = "Rank in county employment",
    color = NULL,
    caption = my_caption
  )
  
  
```

<br>

## Trends

The year over year drop in manufacturing jobs through 2012 is striking. As is the consistent growth in (1) healthcare and social services and (2) Accommodation and Food through the 21-year period.

```{r}

data_for_plot <- d_sector_totals_state |>
  mutate(pct_emp = emp / sum(emp)) |>
  inner_join(top_naics,
             by = c("naics", "naics_abbr")) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp))

data_for_plot |>
  ggplot(aes(year, emp, color  = naics_abbr)) +
  geom_point(size = 0.6, alpha = 0.4,
            show.legend = FALSE) +
  geom_labelsmooth(aes(label = naics_abbr,
                       hjust = naics_sort_order / top_naics_cutoff - 0.1),
                   method = 'loess', formula = 'y ~ x',
                   span = 0.95,
                   show.legend = FALSE
  ) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_x_continuous(breaks = c(2001, 2011, 2021)) +
  guides(color = guide_legend(reverse = TRUE)) +
  labs(
    title = glue("NC employment trends: top {top_naics_cutoff} sectors"),
    x = "",
    y = "Number of employees",
    color = "",
    caption = my_caption
  )
  
```

<br>

I don't know why the average wage of utility sector works rose about 50% in 2008 only. That year no major hurricanes hit NC (which is the only likely "one year disruption" I could think of).

```{r fig.height=5, fig.width=7}
#| label: fig-rank-employee-wages-top-sectors-nominal
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "Sector rank by number of employees TODO: Fixme"

d_infation_ref <- read_xlsx("./data/ref/us-inflation.xlsx",
                        skip = 13)

inflation_adj <- d_infation_ref$cpi[d_infation_ref$year == 2021] / d_infation_ref$cpi[d_infation_ref$year == 2001]
d_infation_adj <- d_infation_ref |>
  filter(year >= 2001,
         year <= 2021) |>
  mutate(adj = cpi[year == 2021] / cpi)

top_wage <- d_sector_totals_state |>
  filter(year == 2021) |>
  slice_max(order_by = avg_wage, n = top_naics_cutoff) |>
  mutate(wage_sort_order = row_number()) |>
  select(naics, wage_sort_order)

data_for_plot <- d_sector_totals_state |>
  inner_join(top_wage,
             by = "naics") |>
  inner_join(d_infation_adj,
             by = "year") |>
  mutate(avg_wage_adjusted = avg_wage * adj)

data_for_plot |>
  ggplot(aes(year, avg_wage, color  = naics_abbr, group = naics_abbr)) +
  geom_point(size = 0.6, alpha = 0.4,
            show.legend = FALSE) +
  geom_labelsmooth(aes(label = naics_abbr, 
                       hjust = wage_sort_order / top_naics_cutoff - 0.1),
                   method = 'loess', formula = 'y ~ x',
                   span = 0.95,
                   show.legend = FALSE
  ) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale(),
                                           prefix = "$")) +
  scale_x_continuous(breaks = c(2001, 2011, 2021)) +
  guides(color = guide_legend(reverse = TRUE)) +
  labs(
    title = glue("NC average wages: top {top_naics_cutoff} sectors"),
    subtitle = glue("Nominal dollars (not adjusted for inflation)"),
    x = "",
    y = "",
    color = "",
    caption = my_caption
  )

```

<br>

Below is the same data in 2021 dollars, which makes visible that average wages in four of the five highest paying sectors grew faster than inflation. I wonder if the drop in the average wage of the "management sector" is due to manufacturing and financial services disruptions after the 2007-2008 financial crisis.

```{r fig.height=5, fig.width=7}
#| label: fig-rank-employee-wages-top-sectors-2021-dollars
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "Sector rank by number of employees TODO: Fixme"

data_for_plot |>
  ggplot(aes(year, avg_wage_adjusted, color  = naics_abbr, group = naics_abbr)) +
  geom_point(size = 0.6, alpha = 0.4,
            show.legend = FALSE) +
  geom_labelsmooth(aes(label = naics_abbr, 
                       hjust = wage_sort_order / top_naics_cutoff - 0.1),
                   method = 'loess', formula = 'y ~ x',
                   span = 0.95,
                   show.legend = FALSE
  ) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale(),
                                           prefix = "$")) +
  scale_x_continuous(breaks = c(2001, 2011, 2021)) +
  guides(color = guide_legend(reverse = TRUE)) +
  labs(
    title = glue("NC average wages: top {top_naics_cutoff} sectors"),
    subtitle = glue("In 2021 dollars"),
    x = "",
    y = "",
    color = "",
    caption = my_caption
  )

```

<br>

## Other topics

There is no relationship between number of employees and average wage in a sector, 
except in a few high-paying sectors where it seems over time employers hired more workers 
and wages for the sector rose.

```{r}
d_sector_totals_county_nc |>
  #filter(year == 2021) |>
  filter(emp != 0) |>
  ggplot(aes(emp, avg_wage, color = naics_abbr)) +
  geom_point(size = 0.2, alpha = 0.2, na.rm = TRUE,
             show.legend = FALSE) +
  scale_x_log10(labels = label_number(scale_cut = cut_short_scale(),
                                           prefix = "$")) +
  scale_y_log10(labels = label_number(scale_cut = cut_short_scale())) +
  labs(
    title = "Number of employees by average wage",
    subtitle = glue("NC counties - CBP sectors 2001-2021; nominal dollars (not adjusted for inflation)",
    "\nColor is associated with sector"),
    x = "Average sector wage (log10 scale)",
    y = "Employees in county (log10 scale)",
    caption = my_caption
  )

```

<br>

## Tables {#sec-tables}

Below are the sector summary categories used in the CBP. To simplify plotting, I created some abbreviations:

```{r}
d_naics_abbr_ref |>
  select(naics_abbr, naics_descr) |>
  arrange(naics_abbr) |>
  mutate(rowid = row_number()) |>
  gt() |>
  tab_header(md(glue("**NC state sector employment 2021**",
                     "<br>*Sum of county sector totals*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10)
  
```

Sorted by number of employees in sector:

```{r}
d_sector_totals_state |>
  filter(year == 2021) |>
  select(-year) |>
  arrange(-emp) |>
  mutate(rowid = row_number()) |>
  gt() |>
  tab_header(md(glue("**NC state sector employment 2021**",
                     "<br>*Sorted by sector totals*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10) |>
  fmt_number(columns = c(emp, avg_wage), 
             decimals = 0)
  

```

Sorted by average wage:

```{r}
d_sector_totals_state |>
  filter(year == 2021) |>
  select(-year) |>
  arrange(-avg_wage) |>
  mutate(rowid = row_number()) |>
  gt() |>
  tab_header(md(glue("**NC state sector average wage 2021**",
                     "<br>*Sorted by average sector wage*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10) |>
  fmt_number(columns = c(emp, avg_wage), 
             decimals = 0)

```



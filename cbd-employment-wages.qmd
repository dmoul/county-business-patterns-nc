# Employment and average wages

```{r}
#| label: setup
#| include: false

source("./scripts/setup.R")

data_label_size <- 3.5 # for plots using labels as data points

# for helpful sub-setting
top_naics_cutoff <- 5
top_county_cutoff <- 10

```

```{r}
#| label: define-reference-data

# since no change in NC county FIPS codes over this time period, I can use the latest
# includes fipscty 999 "Statewide" that corresponds to employment not associated with a county
d_fips_county_ref_all <- read_csv("./data/ref/georef17.txt",
                      col_types = "ccc",
                      show_col_types = FALSE) |>
  rename(fipstate = st,
         fipscty = cty,
         county_name = ctyname) |>
  mutate_if(is.character, ~ purrr::map_chr(.x, iconv, "UTF-8", "UTF-8", sub='')) %>% # just in case
  separate(county_name, into = c("county_name", "state_name"), sep = ", ") |>
  mutate(state_name = if_else(state_name == "Massaschusetts", "Massachusetts", state_name)) # yes, there is an error in the source data!

d_fips_county_ref <- d_fips_county_ref_all |>
  filter(fipstate == "37") |>
  mutate(county_name = str_remove(county_name, " County$"),
         county_name = if_else(county_name == "Statewide", "Statewide, NC", county_name)) |>
  select(-state_name)

d_fips_state_ref <- read_csv("./data/ref/georef17.txt",
                      col_types = "ccc",
                      show_col_types = FALSE) |>
  distinct(st, .keep_all = TRUE) |>
  mutate(state_name = str_extract(ctyname, "(?<=, ).*$")) |>
  select(fipstate = st,
         state_name)

# Since sector total codes and descriptions have not changed in this time period, I'll use the latest
d_naics_ref_2021 <- read_csv("./data/ref/naics2017.txt",
                      col_types = "cc",
                      show_col_types = FALSE) |>
  clean_names()|>
  mutate_if(is.character, ~ purrr::map_chr(.x, iconv, "UTF-8", "UTF-8", sub='')) %>% # just in case
  rename(naics_descr = description) |>
  mutate(naics_descr = str_to_sentence(naics_descr),
         naics_descr = str_replace_all(naics_descr, "&", "and"))

d_naics_abbr_ref <- tribble(
  ~ naics_descr,                                                                 ~naics_abbr_num,  ~naics_abbr,
   "Agriculture, Forestry, Fishing and Hunting",                                  3,               "AgForFish",
   "Utilities",                                                                   17,              "Util",
   "Construction",                                                                5,               "Constr",
   "Manufacturing",                                                               10,              "Manuf",
   "Wholesale Trade",                                                             18,              "Whlsale",
   "Retail Trade",                                                                15,              "Retail",
   "Transportation and Warehousing",                                              16,              "Transpt",
   "Information",                                                                 9,               "Info",
   "Finance and Insurance",                                                       7,               "FinIns",
   "Real Estate and Rental and Leasing",                                          14,              "RealEst",
   "Professional, Scientific, and Technical Services",                            13,              "ProfSciTec",
   "Management of Companies and Enterprises",                                     12,              "Mgmt",
   "Administrative and Support and Waste Management and Remediation Services",    2,               "AdminWaste",
   "Educational Services",                                                        6,               "Educ",
   "Health Care and Social Assistance",                                           8,               "HealthSoc",
   "Arts, Entertainment, and Recreation",                                         4,               "ArtEntRec",
   "Accommodation and Food Services",                                             1,               "AccFood",
   "Other Services (except Public Administration)",                               19,              "OtherServ",
   "Industries not classified",                                                   20,              "OtherInd",
   "Mining, Quarrying, and Oil and Gas Extraction",                               11,              "MineOilGas",
   "Total for all sectors",                                                       0,               "TotalAllSec"
) |>
  mutate(naics_descr = str_to_sentence(naics_descr))


###### inflation adjustment ######

d_infation_ref <- read_xlsx("./data/ref/us-inflation.xlsx",
                        skip = 13)

inflation_adj <- d_infation_ref$cpi[d_infation_ref$year == 2021] / d_infation_ref$cpi[d_infation_ref$year == 2001]
d_infation_adj <- d_infation_ref |>
  filter(year >= 2001,
         year <= 2021) |>
  mutate(adj = cpi[year == 2021] / cpi)


###### employee category reference ######

est_size_class_levels = c("n1_4", "n5_9", "n10_19", "n20_49", "n50_99", "n100_249", "n250_499", "n500_999", 
                     "n1000")

emp_size_class_levels = c("e1_4", "e5_9", "e10_19", "e20_49", "e50_99", "e100_249", "e250_499", "e500_999", 
                     "e1000")

n_employees_ref <- tibble(
  est_size_class = est_size_class_levels,
  emp_size_class = emp_size_class_levels,
  emp_class_count = c(2, 7, 15, 35, 75, 175, 375, 750, 2000),
  factor_order = 1:9
)

```

```{r}
#| label: define-cbp-data-county

data_fname <- "./data/processed/cbp_county_sector_totals_2001_2021.rds"

if(!file.exists(data_fname)) {
  data_files <- tibble(
    file_path = fs::dir_ls("./data/raw/",
                           regexp = ".{3}[0-2][0-9]co.txt")
  )
  
  get_cdp_data_from_file <- function(file_path, year) {
    read_csv(file = file_path, 
             id = "path",
             col_names = TRUE,
             show_col_types = FALSE) |>
      clean_names() |>
      filter(str_detect(naics, "([0-9]{2})?----"))
  }
  
  dta <- bind_rows(
    bind_rows(
      dta_part1 <- map_dfr(data_files[1:6, ], get_cdp_data_from_file),
      dta_part2 <- map_dfr(data_files[7:14, ], get_cdp_data_from_file),
      dta_part3 <- map_dfr(data_files[15, ], get_cdp_data_from_file),
      dta_part4 <- map_dfr(data_files[16, ], get_cdp_data_from_file)
    ),
    bind_rows(
      dta_part5 <- map_dfr(data_files[17, ], get_cdp_data_from_file),
      dta_part6 <- map_dfr(data_files[18:19, ], get_cdp_data_from_file),
      dta_part7 <- map_dfr(data_files[20:21, ], get_cdp_data_from_file)
    ) |>
      rename(n1_4 = n_5) |>
      # convert to numeric, addressing "N" values
      mutate(across(n1_4:n1000_4, function(x) ifelse(x == "N", "0", x))) |>
      mutate(across(n1_4:n1000_4, as.numeric)),
  ) |>
    mutate(year = as.numeric(paste0("20", str_extract(path, "\\d{2}")))) |>
    select(-ends_with(c("flag", "_nf")),
           -c(censtate:cencty)
    ) |>
    relocate(year, .before = path) |>
    relocate(path, .after = est)
  
  write_rds(dta, data_fname,
            compress = "bz2")
} else {
  dta <- read_rds(data_fname)
}

d_cbp_data_county <- dta |>
  mutate(avg_wage = if_else(emp > 0, (ap * 1000) / emp, NA_real_)) |> # nominal avg wage for sector one year
  select(-c(n1000_1:n1000_4))

```

```{r}
#| label: define-cbp-data-state

# It's worth getting the state data separately from county data and aggregating it (I think) 
# so that state-level aggregation of establishments at various employee size classes are counted 
# with state-scope rather than county-cope. 
# Hypothesis: the state-scope will have noticeably more larger establishments and 
#             will differ from county-sourced aggregations, since there is more error in the county-sourced (smaller) data

data_fname <- "./data/processed/cbp_state_sector_totals_2001_2021.rds"

if(!file.exists(data_fname)) {
  data_files <- tibble(
    file_path = fs::dir_ls("./data/raw-state/",
                           regexp = ".{3}[0-2][0-9]st.txt")
  )
  
  get_cdp_data_from_file <- function(file_path, year) {
    read_csv(file = file_path, 
             id = "path",
             col_names = TRUE,
             show_col_types = FALSE) |>
      clean_names() |>
      filter(str_detect(naics, "([0-9]{2})?----"))
  }
  
  dta <- bind_rows(
    bind_rows(
      dta_part1 <- map_dfr(data_files[1:3, ], get_cdp_data_from_file),
      dta_part1a <- map_dfr(data_files[4:6, ], get_cdp_data_from_file),
      dta_part2 <- map_dfr(data_files[7:9, ], get_cdp_data_from_file),
      dta_part2a <- map_dfr(data_files[10:14, ], get_cdp_data_from_file),
      dta_part3 <- map_dfr(data_files[15, ], get_cdp_data_from_file),
      dta_part4 <-  map_dfr(data_files[16, ], get_cdp_data_from_file)
    ) |>
      select(-starts_with(c("q", "f_", "f1", "f2", "f5")),
             -ends_with(c("flag", "_nf", "nf"))),
    bind_rows(
      dta_part5 <- map_dfr(data_files[17, ], get_cdp_data_from_file),
      dta_part6 <- map_dfr(data_files[18:19, ], get_cdp_data_from_file),
      dta_part7 <- map_dfr(data_files[20:21, ], get_cdp_data_from_file)
    ) |>
      select(-starts_with(c("q", "f_", "f1", "f2", "f5")),
             -ends_with(c("flag", "_nf", "nf"))) |>
      rename(n1_4 = n_5,
             e1_4 = e_5,
             a1_4 = a_5
             ) |>
      # convert to numeric, addressing "N" values
      mutate(across(n1_4:n1000, function(x) ifelse(x == "N", "0", x))) |>
      mutate(across(n1_4:n1000, as.numeric))
  ) |>
    filter(is.na(lfo) | lfo == "-") |> # we only want totals
    mutate(year = as.numeric(paste0("20", str_extract(path, "\\d{2}")))) |>
    relocate(year, .before = path) |>
    select(-censtate)

  write_rds(dta, data_fname,
            compress = "bz2")
} else {
  dta <- read_rds(data_fname)
}

d_cbp_data_state <- dta |>
  mutate(avg_wage = (ap * 1000) / emp) |> # nominal avg wage for sector one year
  select(-c(lfo))

```

```{r}
#| label: define-dataframes

# est == establishments
# emp == employees


###### NC state ######

d_est_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, naics, est, starts_with("n"))

d_est_sector_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, est, starts_with("n")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_est = est / sum(est),
         .by = "year")

d_emp_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, naics, emp, starts_with("e"), avg_wage) 

d_emp_sector_total_state_nc <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, emp, starts_with("e"), avg_wage) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_emp = emp / sum(emp),
         .by = "year")

d_est_state_nc_total_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, est, starts_with("n")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  mutate(est_size_class = as_factor(est_size_class), # keep existing order
         est_size_class = as.ordered(est_size_class),
         pct_est = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_emp_state_nc_total_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipstate, naics, emp, starts_with("e")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(e1_4:e1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  mutate(emp_size_class = as_factor(emp_size_class), # keep existing order
         emp_size_class = as.ordered(emp_size_class),
         pct_emp = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_emp_state_nc_size_classes <- d_cbp_data_state |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, naics, emp, starts_with("e")) |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(e1_4:e1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  mutate(emp_size_class = as_factor(emp_size_class), # keep existing order
         emp_size_class = as.ordered(emp_size_class),
         pct_emp = value / sum(value),
         .by = "year") |>
  filter(value > 0)


###### NC county ######

d_emp_total_county <- d_cbp_data_county |>
  filter(fipstate == "37",
         naics == "------") |>
  select(year, fipscty, naics, emp) |>
  inner_join(d_fips_county_ref,
             by = c("fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_emp = emp / sum(emp),
         .by = c("year")) |>
  filter(emp > 0)

d_emp_sector_total_county <- d_cbp_data_county |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipscty, naics, emp) |>
  inner_join(d_fips_county_ref,
             by = c("fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  mutate(pct_emp = emp / sum(emp),
         .by = c("year")) |>
  filter(emp > 0)

d_emp_county_nc_size_classes <- d_cbp_data_county |>
  filter(fipstate == "37",
         naics != "------") |>
  select(year, fipstate, fipscty, naics, emp, starts_with("n")) |>
  inner_join(d_fips_county_ref,
             by = c("fipstate", "fipscty")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  # county data doesn't include employees per size class, so we'll estimate
  inner_join(n_employees_ref,
             by = "est_size_class") |>
  rename(est_value = value) |>
  mutate(value = est_value * emp_class_count) |>
  mutate(emp = if_else(sum(emp) == 0, sum(value), mean(emp)),
         .by = c("year", "fipscty", "naics")) |>
  mutate(pct_emp = value / sum(value),
         .by = c("year", "fipscty")) |>
  filter(value > 0)


###### USA ######

d_est_emp_total_usa <- d_cbp_data_state |>
  inner_join(d_fips_state_ref,
             by = c("fipstate")) |>
  inner_join(d_naics_ref_2021,
             by = "naics") |>
  inner_join(d_naics_abbr_ref,
             by = "naics_descr") |>
  summarize(# establishments
            est = sum(est, na.rm = TRUE),
            n1_4 = sum(n1_4, na.rm = TRUE),
            n5_9 = sum(n5_9, na.rm = TRUE),
            n10_19 = sum(n10_19, na.rm = TRUE),
            n20_49 = sum(n20_49, na.rm = TRUE),
            n50_99 = sum(n50_99, na.rm = TRUE),
            n100_249 = sum(n100_249, na.rm = TRUE),
            n250_499 = sum(n250_499, na.rm = TRUE),
            n500_999 = sum(n500_999, na.rm = TRUE),
            n1000 = sum(n1000, na.rm = TRUE),
            # employees
            emp = sum(emp, na.rm = TRUE),
            e1_4 = sum(e1_4, na.rm = TRUE),
            e5_9 = sum(e5_9, na.rm = TRUE),
            e10_19 = sum(e10_19, na.rm = TRUE),
            e20_49 = sum(e20_49, na.rm = TRUE),
            e50_99 = sum(e50_99, na.rm = TRUE),
            e100_249 = sum(e100_249, na.rm = TRUE),
            e250_499 = sum(e250_499, na.rm = TRUE),
            e500_999 = sum(e500_999, na.rm = TRUE),
            e1000 = sum(e1000, na.rm = TRUE),
            #avg_wage = weighted.mean(ap * 1000, w = emp),
            .by = c("year", "naics", "naics_descr", "naics_abbr")
            )

d_est_total_usa <- d_est_emp_total_usa |> #
  filter(naics == "------") |>
  select(year, naics, naics_abbr, est, starts_with("n"))

d_est_sector_total_usa <- d_est_emp_total_usa |>
  filter(naics != "------") |>
  select(year, naics, naics_abbr, est, starts_with("n")) |>
  mutate(pct_est = est / sum(est),
         .by = "year")

d_emp_total_usa <- d_est_emp_total_usa |> #
  filter(naics == "------") |>
  select(year, naics, naics_abbr, emp, starts_with("e"))

d_emp_sector_total_usa <- d_est_emp_total_usa |>
  filter(naics != "------") |>
  select(year, naics, naics_abbr, emp, starts_with("e")) |>
  mutate(pct_emp = emp / sum(emp),
         .by = "year")

d_est_usa_total_size_classes <- d_est_emp_total_usa |>
  filter(naics == "------") |>
  pivot_longer(n1_4:n1000,
               names_to = "est_size_class",
               values_to = "value") |>
  mutate(est_size_class = as_factor(est_size_class), # keep existing order
         est_size_class = as.ordered(est_size_class),
         pct_est = value / sum(value),
         .by = "year") |>
  filter(value > 0)

d_emp_usa_total_size_classes <- d_est_emp_total_usa |>
  filter(naics == "------") |>
  pivot_longer(e1_4:e1000,
               names_to = "emp_size_class",
               values_to = "value") |>
  mutate(emp_size_class = as_factor(emp_size_class), # keep existing order
         emp_size_class = as.ordered(emp_size_class),
         pct_emp = value / sum(value),
         .by = "year") |>
  filter(value > 0)


###### for helpful sub-setting ######

top_naics <- d_emp_sector_total_state_nc |>
  filter(year == 2021) |>
  slice_max(order_by = emp, n = top_naics_cutoff) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp),
         naics_sort_order = row_number()) |>
  select(naics, naics_abbr, naics_sort_order)

top_counties_emp <- d_emp_sector_total_county |>
  filter(year == 2021) |>
  summarize(emp_sum = sum(emp),
            .by = county_name) |>
  slice_max(order_by = emp_sum, n = top_county_cutoff)
  
```

## NC employment by sector

For simplicity's sake, the plots below use sector abbreviations listed in @sec-tables.

```{r fig.height=6, fig.width=8}
#| label: fig-state-employment-by-sector-count
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "NC state employment by sector 2021"

data_for_plot <- d_emp_sector_total_state_nc |>
  filter(year == 2021) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp)) 

nc_naics_abbr_levels = levels(data_for_plot$naics_abbr)

data_for_plot |>
  ggplot() +
  geom_col(aes(x = emp, y = naics_abbr),
           fill = carolina_blue, alpha = 0.6) +
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  labs(
    title = "NC state employment by sector 2021",
    subtitle = "Includes all 100 counties and 'Statewide'",
    x = "Employees",
    y = "",
    color = NULL,
    caption = my_caption
  )
```

<br>

The employment distribution across the sectors in NC and the USA overall is similar:

```{r fig.height=6, fig.width=8}
#| label: fig-state-employment-by-sector-pct-usa-compare
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "NC employment by sector compared to USA 2021"

data_for_plot <- bind_rows(
  d_emp_sector_total_state_nc |>
    filter(year == 2021) |>
    mutate(scope = "nc"),
  d_emp_sector_total_usa |>
    filter(year == 2021) |>
    mutate(scope = "usa")
) |>
  select(naics, naics_abbr, emp, pct_emp, scope) |>
  mutate(naics_abbr = factor(naics_abbr, levels = nc_naics_abbr_levels)) |>
  mutate(low_value = min(pct_emp),
         high_value = max(pct_emp),
         .by = naics_abbr) |>
  mutate(diff_pct = high_value - low_value,
         diff_pct = if_else(pct_emp == high_value, diff_pct, -1 * diff_pct)) 

diff_pct_cutoff <- 0.005

data_for_plot |>
  ggplot() +
  geom_segment(aes(x = low_value, xend = high_value, y = naics_abbr, yend = naics_abbr),
               alpha = 0.3) +
  geom_point(aes(x = pct_emp, y = naics_abbr, color = scope),
           alpha = 0.6) + 
  geom_point(aes(x = pct_emp, y = naics_abbr, color = scope),
           alpha = 0.6) + 
  geom_text(aes(x = high_value, y = naics_abbr,
                label = if_else(diff_pct > diff_pct_cutoff,
                                percent(pct_emp, accuracy = .1),
                                NA_character_)),
            na.rm = TRUE, size = 3,
            hjust = 0, nudge_x = 0.003) +
  geom_text(aes(x = low_value, y = naics_abbr,
                label = if_else(diff_pct < -1 * diff_pct_cutoff,
                                percent(pct_emp, accuracy = .1),
                                NA_character_)),
            na.rm = TRUE, size = 3,
            hjust = 1, nudge_x = -0.003) +
  scale_x_continuous(labels = label_percent()) +
  scale_color_manual(values = c(carolina_blue, "firebrick")) +
  theme(legend.position = c(0.8, 0.4),
        legend.box.background = element_rect(fill = "grey80")) +
  labs(
    title = "NC state employment by sector\ncompared to USA 2021",
    subtitle = glue("Includes all 100 counties and 'Statewide'", 
                    "; showing percentages where difference is > {percent(diff_pct_cutoff, accuracy = 0.1)}"),
    x = "Employees",
    y = "",
    color = NULL,
    caption = my_caption
  )

```

<br>

The CBP includes employees categorized by employee size class. The range is embedded in the name. For example, `e1_4` includes a count of employees working in establishments with 1-4 employees. Let's assume that the average number of workers in each employment size class is about the midpoint of the class. I have assumed that `e1000` ("1000 or more employees) that the midpoint is 2000. From the perspective of workers, what are the most common employer size classes?

```{r fig.height=6, fig.width=12}
#| label: fig-state-workers
#| fig-height: 6
#| fig-width: 12
#| fig-cap: "NC workers in each employee size class 2021"
#| column: page-inset-right

data_for_plot <- d_emp_state_nc_total_size_classes |>
  filter(year == 2021) |>
  inner_join(n_employees_ref |>
               select(-est_size_class),
             by = "emp_size_class")

p1 <- data_for_plot |>
  mutate(emp_size_class = fct_reorder(emp_size_class, factor_order)) |>
  ggplot() +
  geom_col(aes(x = pct_emp, y = emp_size_class),
           fill = carolina_blue, alpha = 0.6) +
  scale_x_continuous(labels = label_percent()) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Percent of employees",
    y = "Employee size class",
    color = NULL,
  )

p2 <- data_for_plot |>
  mutate(emp_size_class = fct_reorder(emp_size_class, pct_emp)) |>
  arrange(desc(emp_size_class)) |>
  mutate(cum_pct_emp = cumsum(pct_emp),
         ybar_start = lag(cum_pct_emp, default = 0)) |>
  ggplot() +
  geom_segment(aes(x = emp_size_class, xend = emp_size_class, y = ybar_start, yend = cum_pct_emp),
           color = carolina_blue, linewidth = 8, alpha = 0.6) + 
  scale_y_continuous(labels = label_percent()) +
  scale_x_discrete(limits=rev) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(
    x = "Employee size class",
    y = "Percent of employees",
    color = NULL,
  )

p1 + p2 +
  plot_annotation(
    title = "Percent of NC employees working for establishments\nin each employee size class",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption,
    #theme = theme(plot.title = element_text(size = 16))
  )
  
```

<br>

```{r fig.height=8, fig.width=12}
#| label: fig-state-establishments-employees-naics-pct-two-plot
#| fig-height: 8
#| fig-width: 12
#| fig-cap: "Percent of NC workers in each employee size class by sector 2021"
#| column: page-inset-right

data_for_plot <- d_emp_state_nc_size_classes |>
  filter(year == 2021) |>
  inner_join(n_employees_ref |>
               select(-est_size_class),
             by = "emp_size_class") |>
  mutate(emp_size_class = factor(emp_size_class, levels = emp_size_class_levels),
         naics_abbr = fct_lump(naics_abbr, n = 9, w = emp)) 

p1 <- data_for_plot |>
  ggplot() +
  geom_col(aes(x = pct_emp, y = emp_size_class, fill = naics_abbr),
           alpha = 0.6) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Percent of employees",
    y = "Employee size class",
    color = NULL
  )

p2 <- data_for_plot |>
  ggplot() +
  geom_col(aes(x = pct_emp, y = emp_size_class, fill = naics_abbr),
           alpha = 0.6, position = position_fill()) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_y_discrete(limits=rev) +
  labs(
    x = "Distibution of size classes",
    y = "Employee size class",
    color = NULL
  )

p3 <- data_for_plot |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp, sum)) |>
  ggplot() +
  geom_col(aes(x = pct_emp, y = naics_abbr, fill = emp_size_class),
           alpha = 0.6) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_fill_viridis_d(end = 0.85) +
  labs(
    x = "Percent of employees",
    y = NULL,
    color = NULL
  )

p4 <- data_for_plot |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp, sum)) |> 
  ggplot() +
  geom_col(aes(x = pct_emp, y = naics_abbr, fill = emp_size_class),
           alpha = 0.6, position = position_fill()) +
  scale_x_continuous(labels = label_percent(accuracy = 1)) +
  scale_fill_viridis_d(end = 0.85) +
  labs(
    x = "Distribution of NAICS categories",
    y = NULL,
    color = NULL
  )

(p1 + p2) / (p3 + p4) +
  plot_annotation(
    title = "Percent of NC workers in each employee size class by sector",
    subtitle = "2021; includes all sectors reported in CBP",
    caption = my_caption
  )
  
```

<br>

## Top sectors in largest NC counties

```{r}
d_nc_2021_top5 <- d_emp_sector_total_county |>
  filter(year == 2021) |>
  inner_join(top_counties_emp,
            by = "county_name") |>
  slice_max(order_by = emp,
            n = 5,
            by = "fipscty") |>
  mutate(n_cat = n(),
         emp_rank = n_cat + 1 - rank(emp,
                             ties.method = "random"),.by = fipscty)
```

```{r fig.height=10, fig.width=14}
#| label: fig-rank-employee-count-top-counties-pct
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Sector percent of country emplyment rank"

county_name_label <- d_emp_sector_total_county |> #d_sector_totals_county |>
  filter(year == 2021) |>
  select(year, fipscty, emp, county_name, naics) |>
  summarize(emp_sum = sum(emp),
            .by = county_name) |>
  slice_max(order_by = emp_sum, n = 10) |>
  mutate(county_name_label = glue("{county_name}\n{comma(emp_sum)}"),
         county_name_label = fct_reorder(county_name_label, -emp_sum))

data_for_plot <- d_nc_2021_top5 |>
  select(county_name, emp, naics, naics_descr, emp_rank) |>
  left_join(d_naics_abbr_ref,
             by = c("naics_descr")) |>
  left_join(county_name_label,
             by = c("county_name")) |>
  mutate(pct_emp = emp / emp_sum,
         county_name_label = fct_reorder(county_name_label, -emp, sum)) |>
  complete(county_name_label, naics_abbr, fill = list(emp = NA, pct_emp = NA)) 

data_for_plot |> 
  ggplot() +
  geom_line(aes(x = county_name_label, y = pct_emp, group = naics_abbr, color = naics_abbr),
            show.legend = FALSE, na.rm = TRUE) +
  geom_label(aes(x = county_name_label, y = pct_emp, label = naics_abbr, fill = naics_abbr),
             show.legend = FALSE, na.rm = TRUE, alpha = 0.4, size = data_label_size) +
  scale_x_discrete(position = "top") +
  scale_y_continuous(labels = label_percent()) +
  coord_cartesian(ylim = c(NA, 0.30)) +
  theme(axis.text.x = element_text(size = 10)) +
  labs(
    title = "Top 5 sectors in 10 largest NC counties:\npercent of county employment",
    subtitle = glue("Ordered by total county employment reported in CBP",
                    "; 'Statewide' refers to employees not associated with one county",
                    "\nNot showing Statewide AdminWaste, since it's over 50% of all 'Statewide' employees"),
    x = "",
    y = "Percent of county employment",
    color = NULL,
    caption = my_caption
  )
  
```

<br>

```{r fig.height=8, fig.width=10}
#| label: fig-rank-employee-count-top-counties-rank
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Sector rank by number of employees"

data_for_plot |>
  ggplot() +
  geom_line(aes(x = county_name_label, y = emp_rank, group = naics_abbr, color = naics_abbr),
            show.legend = FALSE, na.rm = TRUE) +
  geom_label(aes(x = county_name_label, y = emp_rank, label = naics_abbr, fill = naics_abbr),
             show.legend = FALSE, na.rm = TRUE, alpha = 0.4, size = data_label_size) +
  scale_x_discrete(position = "top") +
  scale_y_reverse() +
  theme(axis.text.x = element_text(size = 10)) +
  labs(
    title = "Top 5 sectors in 10 largest NC counties: ranking",
    subtitle = glue("Ordered by total county employment reported in CBP",
                    "; 'Statewide' refers to workers not associated with one county"),
    x = "",
    y = "Rank in county employment",
    color = NULL,
    caption = my_caption
  )
  
```

<br>

## Trends in employment and average wages statewide

```{r fig.height=10, fig.width=12}
#| label: fig-state-employment-naics-timeseries
#| fig-height: 10
#| fig-width: 12
#| fig-cap: "NC workers in each sector 2001-2021"
#| column: page-inset-right
#| warning: false

data_for_plot <- d_emp_sector_total_state_nc |>
  filter(naics_abbr != "OtherInd") |>
  mutate(naics_abbr = fct_reorder(naics_abbr, -emp)
         ) |>
  mutate(emp_fist_year = emp[year == min(year)],
         emp_last_year = emp[year == max(year)],
         .by = c("naics")) |>
  mutate(pct_emp_diff = emp_last_year / emp_fist_year - 1)

labels_for_plot <- data_for_plot |>
  filter(year == max(year))

p1 <- data_for_plot |>
  filter(naics_abbr != "Other") |>
  ggplot() +
  geom_line(aes(x = year, y = emp, color = naics_abbr, group = naics_abbr),
           linewidth = 0.4, alpha = 0.6, show.legend = FALSE) +
  geom_text_repel(data = labels_for_plot,
                  aes(x = year + 0.5, y = emp, label = naics_abbr, color = naics_abbr),
                  direction = "y", hjust = 0, vjust = 0.5, size = 3,
                  min.segment.length = unit(1, "cm"), force_pull = 100,
                  seed = 123,
                  show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  expand_limits(x = 2026,
                y = 0) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    subtitle = "NC workers in each sector",
    x = "",
    y = "Number of employees",
    color = NULL,
    caption = my_caption
  )

p2 <- data_for_plot |>
  filter(naics_abbr != "Other") |>
  ggplot() +
  geom_area(aes(x = year, y = emp, color = naics_abbr, fill = naics_abbr, group = naics_abbr),
           linewidth = 0.4, alpha = 0.6, show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale()),
                     expand = expansion(mult = c(0, 0.02))) +
  expand_limits(#x = 2026,
                y = 0) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    subtitle = "NC workers combined trend",
    x = "",
    y = "Number of employees",
    color = NULL,
    caption = my_caption
  )

p3 <- data_for_plot |>
  filter(year == 2021,
         emp != 0) |>
  ggplot(aes(emp, pct_emp_diff, color = naics_abbr)) +
  geom_hline(yintercept = 0, lty = 2, size = 0.2, alpha = 0.2) +
  geom_label(aes(label = naics_abbr),
             show.legend = FALSE, hjust = 0.5, vjust = 0.5) +
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = label_percent()) +
  labs(
    subtitle = glue("What is the percent change in employment since 2001?"),
    x = "Employees in NC in 2021",
    y = "Pct change since 2001"
    )

(p1 + p2) / p3 +
  plot_annotation(
    title = "NC workers in each employee sector 2001-2021",
    subtitle = "Includes all sectors reported in CBP",
    caption = my_caption
  )

```

<br>

The portion of employees in each employee class size varies over time and across sectors. Decade-long trends are visible: 

* The share of employees in the Accommodation and Food sector has been increasing in most employee size classes
* The share in Manufacturing has been in noticable decline, especially through 2015 and in the larger employee size classes
* Construction slowed significantly after the 2008 financial crisis.

In the HealthSoc, Retail, and ProfSciTec sectors there are cases of big changes from one year to the next in multiple employee size classes. I wonder if this is due to changes in NAICS categories, changes in measurement methodology, or a real change in that sector.

Noise added to some data before release may be the cause of the jumpiness in some of the least common employee size classes.

```{r fig.height=8, fig.width=10}
#| label: fig-state-employees-naics-pct-timeseries-top-9-sectors
#| fig-height: 8
#| fig-width: 10
#| fig-cap: "Percent of NC workers in each employee size class by sector"
#| column: page-inset-right

data_for_plot <- d_emp_state_nc_size_classes |> # d_emp_state_nc_size_classes |> #d_sector_totals_state |>
  inner_join(n_employees_ref |>
               select(-est_size_class),
             by = "emp_size_class") |>
  mutate(emp_size_class = factor(emp_size_class, levels = emp_size_class_levels),
         naics_abbr = fct_lump(naics_abbr, n = 9, w = emp)) 

data_for_plot |>
  filter(naics_abbr != "Other") |>
  ggplot() +
  geom_line(aes(x = year, y = pct_emp, color = emp_size_class, group = emp_size_class),
           linewidth = 0.4, alpha = 0.6) +
  scale_y_continuous(labels = label_percent(accuracy = 0.1)) +
  facet_wrap(. ~ naics_abbr, scales = "free_y") +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Percent of NC workers in each employee size class\nby sector 2001-2021",
    subtitle = "Top 9 sectors by number of employees (in 2021) as reported in CBP",
    x = "",
    y = "Percent of employees (scale varies)",
    color = NULL,
    caption = my_caption
  )

```

<br>

The year over year drop in manufacturing jobs through 2012 is striking. As is the consistent growth through the 21-year period in (1) Healthcare and social services and (2) Accommodation and food.

```{r fig.height=5, fig.width=7}
#| label: fig-rank-employment
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "Employment trend: top 5 sectors by number of employees"

data_for_plot <- d_emp_sector_total_state_nc |>
  inner_join(top_naics,
             by = c("naics", "naics_abbr")) |>
  mutate(naics_abbr = fct_reorder(naics_abbr, emp))

data_for_plot |>
  ggplot(aes(year, emp, color  = naics_abbr)) +
  geom_point(size = 0.6, alpha = 0.4,
            show.legend = FALSE) +
  geom_labelsmooth(aes(label = naics_abbr,
                       hjust = naics_sort_order / top_naics_cutoff - 0.1),
                   method = 'loess', formula = 'y ~ x', span = 0.95,
                   show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale()),
                     expand = expansion(mult = c(0, 0.02))) +
  scale_x_continuous(breaks = c(2001, 2011, 2021)) +
  expand_limits(y = 0) +
  guides(color = guide_legend(reverse = TRUE)) +
  labs(
    title = glue("NC employment trend:\nTop {top_naics_cutoff} sectors"),
    x = "",
    y = "Number of employees",
    color = "",
    caption = my_caption
  )
  
```

<br>

Average wage trends are not uniform across sectors. Wages in four of the five highest paying sectors grew faster than inflation while it dropped in "Management". I wonder if the drop in the average wage of the management sector is due to manufacturing and financial services disruptions set in motion by the 2008 financial crisis and the COVID-19 pandemic. Or perhaps managers are getting a smaller portion of their income in wages.

Utility workers' average wage declined in the years after the 2008 financial crisis and returned to growth in recent years. I wonder why the average wage of utility sector works nearly doubled in 2009 (and only then). That year no major hurricanes hit NC (which is the only likely "one year disruption" I can think of).

```{r fig.height=5, fig.width=7}
#| label: fig-rank-employee-wages-top-sectors-2021-dollars
#| fig-height: 5
#| fig-width: 7
#| fig-cap: "Wage trend: top 5 sectors by average wage in 2021"

top_wage <- d_emp_sector_total_state_nc |>
  filter(year == 2021) |>
  slice_max(order_by = avg_wage, n = top_naics_cutoff) |>
  mutate(wage_sort_order = row_number()) |>
  select(naics, wage_sort_order)

data_for_plot <- d_emp_sector_total_state_nc |>
  inner_join(top_wage,
             by = "naics") |>
  inner_join(d_infation_adj,
             by = "year") |>
  mutate(avg_wage_adjusted = avg_wage * adj)

data_for_plot |>
  ggplot(aes(year, avg_wage_adjusted, color  = naics_abbr, group = naics_abbr)) +
  geom_point(size = 0.6, alpha = 0.4,
            show.legend = FALSE) +
  geom_labelsmooth(aes(label = naics_abbr, 
                       hjust = wage_sort_order / top_naics_cutoff - 0.1),
                   method = 'loess', formula = 'y ~ x', span = 0.95,
                   show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale(),
                                           prefix = "$"),
                     expand = expansion(mult = c(0, 0.02))) +
  scale_x_continuous(breaks = c(2001, 2011, 2021)) +
  guides(color = guide_legend(reverse = TRUE)) +
  expand_limits(y = 0) +
  labs(
    title = glue("NC average wage trend:\nTop {top_naics_cutoff} sectors"),
    subtitle = glue("In 2021 dollars"),
    x = "",
    y = "",
    color = "",
    caption = my_caption
  )

```

<br>

```{r fig.height=8, fig.width=10}
#| label: fig-wage-trend-top-sectors
#| fig-height: 10
#| fig-width: 8
#| fig-cap: "NC average wage trend by sector 2001-2021"
#| warning: false

data_for_plot <- d_emp_sector_total_state_nc |>
  inner_join(d_infation_adj,
             by = "year") |>
  mutate(avg_wage_adjusted = avg_wage * adj) |>
  mutate(min_wage = min(avg_wage_adjusted),
         max_wage = min(avg_wage_adjusted),
         wage_fist_year = avg_wage_adjusted[year == min(year)],
         wage_last_year = avg_wage_adjusted[year == max(year)],
         .by = c("naics")) |>
  mutate(wage_diff = wage_last_year - wage_fist_year,
         wage_direction = if_else(wage_diff > 0, "wage up", "wage down"),
         pct_wage_diff = wage_last_year / wage_fist_year - 1)

labels_for_plot <- data_for_plot |>
  filter(year == max(year))
  
p1 <- data_for_plot |>
  filter(emp != 0) |>
  ggplot(aes(year, avg_wage_adjusted, color = naics_abbr)) +
  geom_point(size = 1, alpha = 0.2, na.rm = TRUE,
             show.legend = FALSE) +
  geom_smooth(method = 'loess', formula = 'y ~ x',
              #span = 3,
              se = FALSE, show.legend = FALSE) +
  geom_text_repel(data = labels_for_plot,
                  aes(x = year + 0.5, y = avg_wage_adjusted, label = naics_abbr),
                  direction = "y", hjust = 0, vjust = 0.5, size = 3,
                  min.segment.length = unit(1, "cm"), force_pull = 100,
                  seed = 123,
                  show.legend = FALSE) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale(),
                                           prefix = "$"),
                     expand = expansion(mult = c(0, 0.02))) +
  expand_limits(x = 2026,
                y = 0) +
  facet_wrap(~ wage_direction) +
  labs(
    subtitle = glue("What is the NC average wage trend,",
                    " and is sector average wage in 2021 up or down compared to 2001?"),
    x = NULL,
    y = "Average wages"
  )

p2 <- data_for_plot |>
  filter(year == 2021,
         emp != 0) |>
  ggplot(aes(emp, pct_wage_diff, color = naics_abbr)) +
  geom_hline(yintercept = 0, lty = 2, size = 0.2, alpha = 0.2) +
  geom_label(aes(label = naics_abbr),
             show.legend = FALSE, hjust = 0.5, vjust = 0.5) +
  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = label_percent()) +
  labs(
    subtitle = glue("What is the percentage change in average wages since 2001?"),
    x = "Employees in NC in 2021",
    y = "Percent change in average wage since 2001"
    )

p1 / p2 +
  plot_annotation(
    title = "Average wages by sector 2001-2021",
    subtitle = "2021 dollars; includes all sectors reported in CBP",
    caption = my_caption
  )

```

<br>

## Trends in employment in top counties

There is variation across counties too.

```{r fig.height=6, fig.width=8}
#| label: fig-county-naics-employees-sector-totals-time-series-pct
#| fig-height: 6
#| fig-width: 8
#| fig-cap: "NC state employes by establishment size class and sector (percent) 2021-2021"
#| column: page-inset-right
  
data_for_plot <- d_emp_total_county |> #state_nc |> #d_emp_state_nc_size_classes |>#d_emp_sector_total_county |>
  mutate(#naics_abbr = fct_lump(naics_abbr, n = 8, w = pct_emp))
         county_name = fct_lump(county_name, n = 10, w = emp)) 

d_county_name_levels <- data_for_plot |> 
  filter(year == 2021,
         county_name != "Other") |>
  arrange(-pct_emp) |>
  mutate(county_name_level = row_number()) |>
  select(county_name, county_name_level)

data_for_plot |>
  filter(naics_abbr != "Other",
         county_name != "Other") |>
  inner_join(d_county_name_levels,
             by = "county_name") |>
  mutate(county_name = fct_reorder(county_name, county_name_level)) |>
  ggplot() +
  geom_line(aes(x = year, y = pct_emp, color = county_name),
           linewidth = 0.4, alpha = 0.6) +
  scale_y_continuous(labels = label_percent(accuracy = 0.01)) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Percent of state workers 2001-2021",
    subtitle = glue("All sectors in largest 10 largest counties by employment (in 2021) as reported in CBP",
                    "\nConsidering 'Statewide' as a county for this plot"),
    x = "",
    y = "Percent of employees (scale varies by row)",
    color = NULL,
    caption = my_caption
  )
  
```

<br>

```{r fig.height=12, fig.width=10}
#| label: fig-county-naics-employees-size-class-time-series-pct
#| fig-height: 12
#| fig-width: 10
#| fig-cap: "NC state employes by establishment size class and sector (percent) 2021-2021"
#| column: page-inset-right
  
data_for_plot <- d_emp_county_nc_size_classes |>
  mutate(naics_abbr = fct_lump(naics_abbr, n = 8, w = pct_emp),
         county_name = fct_lump(county_name, n = 10, w = emp),
         county_name = fct_rev(county_name)) 

data_for_plot |>
  filter(naics_abbr != "Other",
         county_name != "Other") |>
  ggplot() +
  geom_line(aes(x = year, y = pct_emp, color = emp_size_class, group = emp_size_class),
           linewidth = 0.4, alpha = 0.6) +
  scale_x_continuous(breaks = c(2001, 2011, 2021)) +
  scale_y_continuous(labels = label_percent(accuracy = 0.1)) +
  facet_grid(county_name ~ naics_abbr, scales = "free_y") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
  guides(color = guide_legend(override.aes = c(linewidth = 3))) +
  labs(
    title = "Percent of workers in each employee size class\nby sector and county 2001-2021",
    subtitle = "Top 8 sectors in largest 10 largest counties by employment (in 2021) as reported in CBP",
    x = "",
    y = "Percent of employees (scale varies by row)",
    color = NULL,
    caption = my_caption
  )
  
```

<br>

## Tables {#sec-tables}

Below are the sector summary categories used in the CBP. To simplify plotting, I created some abbreviations:

```{r}
d_naics_abbr_ref |>
  arrange(naics_abbr_num) |>
  select(naics_abbr, naics_descr) |>
  mutate(rowid = row_number()) |>
  gt() |>
  tab_header(md(glue("**NC state sector employment 2021**",
                     "<br>*Sum of county sector totals*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10)
  
```

<br>

Sectors sorted by number of employees:

```{r}
d_emp_sector_total_state_nc |>
  filter(year == 2021) |>
  select(naics, naics_abbr, naics_descr, emp, pct_emp) |> #avg_wage, 
  arrange(-emp) |>
  mutate(rowid = row_number()) |>
  relocate(naics_descr, .after = naics) |>
  gt() |>
  tab_header(md(glue("**NC sector employment 2021**",
                     "<br>*Sorted by sector employment*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10) |>
  fmt_number(columns = c(emp), #, avg_wage
             decimals = 0) |>
  fmt_percent(columns = pct_emp, 
             decimals = 0)

```

<br>

Sorted by average wage:

```{r}
d_emp_sector_total_state_nc |>
  filter(year == 2021) |>
  select(naics, naics_abbr, naics_descr, avg_wage, emp, pct_emp) |>
  arrange(-avg_wage) |>
  mutate(rowid = row_number()) |>
  relocate(naics_descr, .after = naics) |>
  gt() |>
  tab_header(md(glue("**NC sector employment 2021**",
                     "<br>*Sorted by sector average wage*"))) |>
  tab_source_note(md("*US Census County Business Patterns; analysis by Daniel Moul*")) |>
  tab_options(table.font.size = 10) |>
  fmt_number(columns = c(emp, avg_wage),
             decimals = 0) |>
  fmt_percent(columns = pct_emp, 
             decimals = 0)

```

```{r}
knitr::knit_exit()

```

<br>



